{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/assets/background.png","path":"assets/background.png","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/2021-07-13-《Speed Down》Unity2d游戏开发（二）.md","hash":"2bedd33663fe3f15c71c2cac01f01b58d3d3fdf6","modified":1626182855642},{"_id":"source/_posts/2021-07-14-《Speed Down》Unity2d游戏开发（三）.md","hash":"d424a9f9a40241616cdccb14698504daeabff151","modified":1626267443646},{"_id":"source/_posts/更2021-07-06-剪辑视频入门总结.md","hash":"cf0b6bd4434355dea321ecf07f985af0a466adda","modified":1626267266364},{"_id":"source/_posts/更2021-07-09-C++STL.md","hash":"d8b0c5a0eae6e8017658d920b7539451693097c4","modified":1626267217873},{"_id":"source/_posts/2021-07-04-搭建个人博客总结.md","hash":"eac8477e3362745e8db10ed7ab692aef1f96f6d7","modified":1625727058559},{"_id":"source/_posts/更2021-07-14-《Speed Down》Unity2d游戏开发（四）.md","hash":"840f275276f0c936d97eff53926cd18cb47f1f79","modified":1626269821303},{"_id":"source/_posts/2021-07-08-再临Unity.md","hash":"3c831f85cd67e0022ebfc13e26f90d48f9255447","modified":1625964413839},{"_id":"source/_posts/2021-07-08-和相同的二元子数组.md","hash":"3240f25aa3384eca89433b95e3ca99dc51699204","modified":1625737010742},{"_id":"source/_posts/2021-07-06-解决Github无法访问.md","hash":"009145f46d0bafc76bd15338d97a427fc7a170f6","modified":1625727308880},{"_id":"source/_posts/2021-07-06-《Speed Down》Unity2d游戏开发（一）.md","hash":"f9259a758b941b86c718e1d3e8476096bdcc0a61","modified":1626096084134},{"_id":"source/tags/index.md","hash":"f51e5d45846b5a6b2c5313303ebf650556e25bff","modified":1625490765443},{"_id":"source/_posts/更Top.md","hash":"4f114eb80bba5665dc7f926fa466c2fc9c26ac2b","modified":1625905244932},{"_id":"source/categories/index.md","hash":"dea7db88b4e81bdccdf5a866f27655d8fb623d02","modified":1625500055970},{"_id":"source/_data/styles.styl","hash":"9d3948468a44db8e2e6b889ab86d548f54552d0f","modified":1625911368737},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1625474600082},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1625474600082},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1625474600086},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1625474600087},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1625474600083},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1625474600087},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1625474600086},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1625474600116},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1625474600087},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1625474600088},{"_id":"themes/next/_config.yml","hash":"5e39a15f4f5ceffa0f0be143c54a9512f184847e","modified":1625903939048},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1625474600093},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1625474600083},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1625474600085},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1625474600085},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1625474600083},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1625474600085},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1625474600085},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1625474600086},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1625474600085},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1625474600122},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1625474600086},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1625474600086},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1625474600088},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1625474600086},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1625474600089},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1625474600088},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1625474600089},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1625474600090},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1625474600089},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1625474600089},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1625474600094},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1625474600089},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1625474600090},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1625474600094},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1625474600094},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1625474600094},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1625474600095},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1625474600095},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1625474600094},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1625474600095},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1625474600095},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1625474600096},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1625474600096},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1625474600096},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1625474600096},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1625474600096},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1625474600097},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1625474600097},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1625474600097},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1625474600097},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1625474600097},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1625474600098},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1625474600098},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1625474600115},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1625474600098},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1625474600098},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1625474600115},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1625474600117},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1625474600115},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1625474600120},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1625474600120},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1625474600120},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1625474600120},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1625474600121},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1625474600115},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1625474600116},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1625474600115},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1625474600122},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1625474600084},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1625474600121},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1625474600122},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1625474600121},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1625474600122},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1625474600123},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1625474600123},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1625474600124},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1625474600123},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1625474600123},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1625474600124},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1625474600124},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1625474600124},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1625474600124},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1625474600084},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1625474600084},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1625474600084},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1625474600090},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1625474600090},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1625474600091},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1625474600091},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1625474600091},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1625474600092},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1625474600092},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1625474600092},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1625474600092},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1625474600093},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1625474600093},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1625474600093},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1625474600125},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1625474600093},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1625474600148},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1625474600141},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1625474600148},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1625474600147},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1625474600148},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1625474600148},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1625474600149},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1625474600153},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1625474600150},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1625474600149},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1625474600149},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1625474600150},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1625474600149},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1625474600150},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1625474600150},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1625474600150},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1625474600151},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1625474600151},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1625474600152},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1625474600151},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1625474600151},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1625474600152},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1625474600099},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1625474600099},{"_id":"themes/next/layout/_macro/post.swig","hash":"60aa59b746995d8baa4a0c5b0d78eb5fe52f4ae4","modified":1625905178677},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1625474600102},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1625474600102},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1625474600100},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1625474600105},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1625474600105},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1625474600105},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1625474600099},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1625474600107},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1625474600107},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1625474600106},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1625474600110},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1625474600117},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1625474600117},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1625474600117},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1625474600118},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1625474600118},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1625474600118},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1625474600118},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1625474600119},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1625474600119},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1625474600119},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1625474600108},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1625474600119},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1625474600111},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1625474600146},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1625474600146},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1625474600111},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1625474600147},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1625474600147},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1625474600146},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1625474600152},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1625474600152},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1625474600100},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1625474600100},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1625474600156},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1625474600102},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1625474600102},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1625474600101},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1625474600155},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1625474600101},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1625474600101},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1625474600101},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1625474600104},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1625474600102},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1625474600104},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1625474600104},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1625474600103},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1625474600103},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1625474600103},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1625474600103},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1625474600103},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1625474600106},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1625474600106},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1625474600104},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1625474600106},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1625474600106},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1625474600109},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1625474600108},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1625474600105},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1625474600108},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1625474600108},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1625474600107},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1625474600108},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1625474600109},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1625474600110},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1625474600110},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1625474600110},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1625474600109},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1625474600109},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1625474600111},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1625474600109},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1625474600111},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1625474600112},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1625474600112},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1625474600114},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1625474600113},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1625474600114},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1625474600113},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1625474600113},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1625474600112},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1625474600142},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1625474600113},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1625474600114},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1625474600143},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1625474600142},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1625474600143},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1625474600142},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1625474600142},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1625474600143},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1625474600143},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1625474600144},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1625474600144},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1625474600144},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1625474600125},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1625474600144},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1625474600126},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1625474600145},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1625474600126},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1625474600130},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1625474600145},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1625474600146},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1625474600145},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1625474600145},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1625474600145},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1625474600154},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1625474600154},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1625474600134},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1625474600137},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1625474600134},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1625474600137},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1625474600137},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1625474600139},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1625474600139},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1625474600141},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1625474600139},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1625474600139},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1625474600128},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1625474600127},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1625474600128},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1625474600128},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1625474600128},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1625474600129},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1625474600129},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1625474600129},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1625474600129},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1625474600129},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1625474600130},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1625474600130},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1625474600126},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1625474600126},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1625474600127},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"78207f1d136bf750a265566f05999febb18ba39e","modified":1625904371368},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1625474600127},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1625474600131},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1625474600127},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1625474600131},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1625474600132},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1625474600131},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1625474600132},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1625474600131},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1625474600133},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1625474600132},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1625474600133},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1625474600133},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1625474600133},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1625474600133},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1625474600134},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1625474600134},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1625474600135},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1625474600135},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1625474600135},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1625474600135},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1625474600136},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1625474600136},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1625474600138},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1625474600136},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1625474600138},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1625474600138},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1625474600136},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1625474600136},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1625474600140},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1625474600138},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1625474600140},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1625474600141},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1625474600140},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1625474600140},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1625474600140},{"_id":"themes/next/source/images/avatar.jpg","hash":"acdc7d95a97b1c233e787bfc9d7b321c52a2cf3c","modified":1625497456410},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1625474600155},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1625474600154},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1625474600141},{"_id":"themes/next/source/assets/background.png","hash":"6cea513ac9097638ccc8c70bd3b0b9e1eb2a84da","modified":1625911300502},{"_id":"public/search.xml","hash":"a778d5e912bff7691eff97440bf271c931c64c43","modified":1626269856007},{"_id":"public/tags/index.html","hash":"c99b3d8fd1bbf04997ba9d21921879826ae68ab5","modified":1626269856007},{"_id":"public/categories/index.html","hash":"8a003667ff111a247fd7efe664cbf209007ed729","modified":1626269856007},{"_id":"public/2021/07/09/更Top/index.html","hash":"0ca4cb0bbaf159672083361b08956dc6260b6b9d","modified":1626269856007},{"_id":"public/archives/page/2/index.html","hash":"7085dc03454e0fd98c519906c4fd83dda741bc8a","modified":1626269856007},{"_id":"public/archives/2021/page/2/index.html","hash":"e895450bbcd4cd3f9545477224753a637a53c138","modified":1626269856007},{"_id":"public/archives/2021/07/page/2/index.html","hash":"fe0554ef5e161a039bd43bc1e1f6f05e8193e78d","modified":1626269856007},{"_id":"public/categories/琐碎/index.html","hash":"884e4b3bf00b4e362d73fd2e1f354ccf7c47806d","modified":1626269856007},{"_id":"public/categories/unity/index.html","hash":"ec0a262f241802e5dcd2fda2d1a364d283a84e37","modified":1626269856007},{"_id":"public/categories/c/index.html","hash":"1e78ddf9e4d50d79a0d2c760fac45bfc2dc5404d","modified":1626269856007},{"_id":"public/categories/算法/index.html","hash":"c134ae80eb4bf7401cb512010850d1f5911e540c","modified":1626269856007},{"_id":"public/page/2/index.html","hash":"aa3b725e91de36af6401266af5efb7a4b2285f5c","modified":1626269856007},{"_id":"public/tags/hexo/index.html","hash":"fa2790e285fa6052aa6d71fd3f9340d65c214e98","modified":1626269856007},{"_id":"public/tags/git/index.html","hash":"b412506be94edfd874432b00d509c147d0c4359b","modified":1626269856007},{"_id":"public/tags/github/index.html","hash":"1e9787a736791eec7c325296c81ee0ce76ab6c96","modified":1626269856007},{"_id":"public/tags/typora/index.html","hash":"9e3216a442508a2bf8fb79c0eaf1e23f66ed5158","modified":1626269856007},{"_id":"public/tags/next/index.html","hash":"ce3e66718d721c5e3067a2bf3f315348ecd6fdc5","modified":1626269856007},{"_id":"public/tags/windows/index.html","hash":"3ca2b4ea42333baab1e245dd8341b6d8ea912dcd","modified":1626269856007},{"_id":"public/tags/unity/index.html","hash":"792ffe5cb0beb1dc27f0a240be578b331a49382f","modified":1626269856007},{"_id":"public/tags/c/index.html","hash":"a68fd68a7bc650c8ecd413eb26a6fca5a43e1b44","modified":1626269856007},{"_id":"public/tags/unityhub/index.html","hash":"f2c8d69bf8be72f9f776381473a2a387b2d59819","modified":1626269856007},{"_id":"public/tags/2d/index.html","hash":"f1909a295a40d3509bf3eb611c9b090934170ab8","modified":1626269856007},{"_id":"public/tags/joint/index.html","hash":"dc51ba5e062a53fc042f011a49a877579983ad9a","modified":1626269856007},{"_id":"public/tags/collider/index.html","hash":"f4258e1a93d2feec5d83aaf7d46c719ade0bf6fc","modified":1626269856007},{"_id":"public/tags/ps/index.html","hash":"a2d8d42ceca5266424c0eb77cc0279d4f22614cf","modified":1626269856007},{"_id":"public/tags/像素/index.html","hash":"a8a5ef265779e31532a4f1be6507d55c853a0152","modified":1626269856007},{"_id":"public/tags/pr/index.html","hash":"a6f5e6653db858b10f2eb1edafef152e47504444","modified":1626269856007},{"_id":"public/tags/animator/index.html","hash":"eac8940968cca718670506ed3786e23adf193bd8","modified":1626269856007},{"_id":"public/tags/trigger/index.html","hash":"eb6ed61328070f7d661fb79f7bfae14f17c65c69","modified":1626269856007},{"_id":"public/tags/map/index.html","hash":"28ed1cfdc798fbce1d678f7dbb0f9f05738ca65e","modified":1626269856007},{"_id":"public/tags/vector/index.html","hash":"52c2831aab7a8fdf2e6b4b466dafba2236ff8fb8","modified":1626269856007},{"_id":"public/tags/滑动窗口法/index.html","hash":"214c105e9b1718ee34d837c48207334eb19e7346","modified":1626269856007},{"_id":"public/tags/prefab/index.html","hash":"05d49b4022cb79a2aea28055d6ead2231c575d90","modified":1626269856007},{"_id":"public/2021/07/14/更2021-07-14-《Speed Down》Unity2d游戏开发（四）/index.html","hash":"751e74357f2a8d852e5803821a3d7b1597e09e94","modified":1626269856007},{"_id":"public/2021/07/14/2021-07-14-《Speed Down》Unity2d游戏开发（三）/index.html","hash":"ca62033db665e7db36af72061071a9343890e288","modified":1626269856007},{"_id":"public/2021/07/13/2021-07-13-《Speed Down》Unity2d游戏开发（二）/index.html","hash":"1be011ebd58316a4ecea5092705111eadc6b80c6","modified":1626269856007},{"_id":"public/2021/07/09/更2021-07-09-C++STL/index.html","hash":"f8d601aa659436bfacfc8dec0c0f1d091073d0e1","modified":1626269856007},{"_id":"public/2021/07/08/2021-07-08-再临Unity/index.html","hash":"0921f9fe0d3df039cf36e39ece818cbca8dfa793","modified":1626269856007},{"_id":"public/2021/07/08/2021-07-08-和相同的二元子数组/index.html","hash":"ec24dbeeabcf3efa9f36115d959cbe84782c3ce4","modified":1626269856007},{"_id":"public/2021/07/06/2021-07-06-《Speed Down》Unity2d游戏开发（一）/index.html","hash":"332fcfc3e26bb4d49d184648340258c3b4e1b0d3","modified":1626269856007},{"_id":"public/2021/07/06/更2021-07-06-剪辑视频入门总结/index.html","hash":"29f8887c38d29d72cc57acdcbc2775762a38cb81","modified":1626269856007},{"_id":"public/2021/07/06/2021-07-06-解决Github无法访问/index.html","hash":"acde9f73a844a6c10470f26ea2a577157282e534","modified":1626269856007},{"_id":"public/2021/07/04/2021-07-04-搭建个人博客总结/index.html","hash":"32e0276bc370d920dceff51c454b30390d77404d","modified":1626269856007},{"_id":"public/archives/index.html","hash":"8d9c650dd71e42d8938ca4bbf43a36e7431071ea","modified":1626269856007},{"_id":"public/archives/2021/index.html","hash":"060efc0e8b7d4e684d9d147d944ee4504892b9af","modified":1626269856007},{"_id":"public/archives/2021/07/index.html","hash":"c20b7b79ed8b17594302ef32452e848d2aec513f","modified":1626269856007},{"_id":"public/index.html","hash":"1484830384db10a11eeee1712865ea9a3a822d92","modified":1626269856007},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1626269856007},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1626269856007},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1626269856007},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1626269856007},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1626269856007},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1626269856007},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1626269856007},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1626269856007},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1626269856007},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1626269856007},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1626269856007},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1626269856007},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1626269856007},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1626269856007},{"_id":"public/images/avatar.jpg","hash":"acdc7d95a97b1c233e787bfc9d7b321c52a2cf3c","modified":1626269856007},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1626269856007},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1626269856007},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1626269856007},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1626269856007},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1626269856007},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1626269856007},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1626269856007},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1626269856007},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1626269856007},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1626269856007},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1626269856007},{"_id":"public/css/main.css","hash":"2e4161dd1cc6240b5f5332d4ec7009666c1dc946","modified":1626269856007},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1626269856007},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1626269856007},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1626269856007},{"_id":"public/assets/background.png","hash":"6cea513ac9097638ccc8c70bd3b0b9e1eb2a84da","modified":1626269856007}],"Category":[{"name":"琐碎","_id":"ckr3j30x60004i0u09p0rca7w"},{"name":"unity","_id":"ckr3j30xf000di0u00wjqb156"},{"name":"c++","_id":"ckr3j30xl000ti0u0azelgzv0"},{"name":"算法","_id":"ckr3j30xm000yi0u07x5qeadu"}],"Data":[{"_id":"styles","data":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}],"Page":[{"title":"标签","date":"2021-07-05T13:11:11.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-07-05 21:11:11\ntype: \"tags\"\n---\n","updated":"2021-07-05T13:12:45.443Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckr3j30wu0000i0u09xwuaa20","content":"","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":""},{"title":"分类","date":"2021-07-05T13:22:54.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-07-05 21:22:54\ntype: \"categories\"\n---\n","updated":"2021-07-05T15:47:35.970Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckr3j30x40002i0u0geyggu4l","content":"","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":""}],"Post":[{"title":"搭建个人博客总结","date":"2021-07-03T16:00:00.000Z","_content":"\n\n\n### \t一、用Hexo在本地生成博客并部署（白嫖）到github\n\n后半部分个性化博客的教学先不看：\n\n[GitHub+Hexo 搭建个人网站详细教程](https://zhuanlan.zhihu.com/p/26625249)\n\n <!--more-->\n\n------\n\n\n\n### \t二、将博客的源代码也放到github托管\n\n文章最后面还有作者引用的原文，两篇文章结合一起看：\n\n[Hexo | 怎么去备份你的Hexo博客](https://www.jianshu.com/p/baab04284923)\n\n\n\n------\n\n\n\n### \t三、最后就是用我们的Typora来写作啦\n\n快捷键记不记无所谓，typora工具栏全都有：\n\n[Hexo博客写文章及基本操作](https://zhuanlan.zhihu.com/p/156915260)\n\n\n\n------\n\n\n\n### 四、应用next主题以及个性化\n\nnext和hexo好像还有版本适配的问题，我用旧版的next会把博客变成乱码，最终是这篇文章中的新版本适合我：\n\n[hexo的next主题个性化配置](https://zhuanlan.zhihu.com/p/60424755 )\n\n\n\n------\n\n\n\n### 终、报错汇总\n\n```\ngit g -d  \n```\n\n报错：**fatal:  unable to access 'h...://github.com/....github.io.git/**\n\n原因是git的代理出现问题？解决方法：\n\n```\ngit config --global --unset git.proxy\n```\n\n\n\n","source":"_posts/2021-07-04-搭建个人博客总结.md","raw":"---\ntitle: 搭建个人博客总结\ndate: 2021-07-04\ncategories: 琐碎\ntags:\n  - hexo\n  - git\n  - github\n  - typora\n  - next\n---\n\n\n\n### \t一、用Hexo在本地生成博客并部署（白嫖）到github\n\n后半部分个性化博客的教学先不看：\n\n[GitHub+Hexo 搭建个人网站详细教程](https://zhuanlan.zhihu.com/p/26625249)\n\n <!--more-->\n\n------\n\n\n\n### \t二、将博客的源代码也放到github托管\n\n文章最后面还有作者引用的原文，两篇文章结合一起看：\n\n[Hexo | 怎么去备份你的Hexo博客](https://www.jianshu.com/p/baab04284923)\n\n\n\n------\n\n\n\n### \t三、最后就是用我们的Typora来写作啦\n\n快捷键记不记无所谓，typora工具栏全都有：\n\n[Hexo博客写文章及基本操作](https://zhuanlan.zhihu.com/p/156915260)\n\n\n\n------\n\n\n\n### 四、应用next主题以及个性化\n\nnext和hexo好像还有版本适配的问题，我用旧版的next会把博客变成乱码，最终是这篇文章中的新版本适合我：\n\n[hexo的next主题个性化配置](https://zhuanlan.zhihu.com/p/60424755 )\n\n\n\n------\n\n\n\n### 终、报错汇总\n\n```\ngit g -d  \n```\n\n报错：**fatal:  unable to access 'h...://github.com/....github.io.git/**\n\n原因是git的代理出现问题？解决方法：\n\n```\ngit config --global --unset git.proxy\n```\n\n\n\n","slug":"2021-07-04-搭建个人博客总结","published":1,"updated":"2021-07-08T06:50:58.559Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30x10001i0u05h8vb9st","content":"<h3 id=\"一、用Hexo在本地生成博客并部署（白嫖）到github\"><a href=\"#一、用Hexo在本地生成博客并部署（白嫖）到github\" class=\"headerlink\" title=\"一、用Hexo在本地生成博客并部署（白嫖）到github\"></a>一、用Hexo在本地生成博客并部署（白嫖）到github</h3><p>后半部分个性化博客的教学先不看：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/26625249\">GitHub+Hexo 搭建个人网站详细教程</a></p>\n <span id=\"more\"></span>\n\n<hr>\n<h3 id=\"二、将博客的源代码也放到github托管\"><a href=\"#二、将博客的源代码也放到github托管\" class=\"headerlink\" title=\"二、将博客的源代码也放到github托管\"></a>二、将博客的源代码也放到github托管</h3><p>文章最后面还有作者引用的原文，两篇文章结合一起看：</p>\n<p><a href=\"https://www.jianshu.com/p/baab04284923\">Hexo | 怎么去备份你的Hexo博客</a></p>\n<hr>\n<h3 id=\"三、最后就是用我们的Typora来写作啦\"><a href=\"#三、最后就是用我们的Typora来写作啦\" class=\"headerlink\" title=\"三、最后就是用我们的Typora来写作啦\"></a>三、最后就是用我们的Typora来写作啦</h3><p>快捷键记不记无所谓，typora工具栏全都有：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/156915260\">Hexo博客写文章及基本操作</a></p>\n<hr>\n<h3 id=\"四、应用next主题以及个性化\"><a href=\"#四、应用next主题以及个性化\" class=\"headerlink\" title=\"四、应用next主题以及个性化\"></a>四、应用next主题以及个性化</h3><p>next和hexo好像还有版本适配的问题，我用旧版的next会把博客变成乱码，最终是这篇文章中的新版本适合我：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/60424755\">hexo的next主题个性化配置</a></p>\n<hr>\n<h3 id=\"终、报错汇总\"><a href=\"#终、报错汇总\" class=\"headerlink\" title=\"终、报错汇总\"></a>终、报错汇总</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git g -d  </span><br></pre></td></tr></table></figure>\n\n<p>报错：<strong>fatal:  unable to access ‘h…://github.com/….github.io.git/</strong></p>\n<p>原因是git的代理出现问题？解决方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --unset git.proxy</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"<h3 id=\"一、用Hexo在本地生成博客并部署（白嫖）到github\"><a href=\"#一、用Hexo在本地生成博客并部署（白嫖）到github\" class=\"headerlink\" title=\"一、用Hexo在本地生成博客并部署（白嫖）到github\"></a>一、用Hexo在本地生成博客并部署（白嫖）到github</h3><p>后半部分个性化博客的教学先不看：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/26625249\">GitHub+Hexo 搭建个人网站详细教程</a></p>","more":"<hr>\n<h3 id=\"二、将博客的源代码也放到github托管\"><a href=\"#二、将博客的源代码也放到github托管\" class=\"headerlink\" title=\"二、将博客的源代码也放到github托管\"></a>二、将博客的源代码也放到github托管</h3><p>文章最后面还有作者引用的原文，两篇文章结合一起看：</p>\n<p><a href=\"https://www.jianshu.com/p/baab04284923\">Hexo | 怎么去备份你的Hexo博客</a></p>\n<hr>\n<h3 id=\"三、最后就是用我们的Typora来写作啦\"><a href=\"#三、最后就是用我们的Typora来写作啦\" class=\"headerlink\" title=\"三、最后就是用我们的Typora来写作啦\"></a>三、最后就是用我们的Typora来写作啦</h3><p>快捷键记不记无所谓，typora工具栏全都有：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/156915260\">Hexo博客写文章及基本操作</a></p>\n<hr>\n<h3 id=\"四、应用next主题以及个性化\"><a href=\"#四、应用next主题以及个性化\" class=\"headerlink\" title=\"四、应用next主题以及个性化\"></a>四、应用next主题以及个性化</h3><p>next和hexo好像还有版本适配的问题，我用旧版的next会把博客变成乱码，最终是这篇文章中的新版本适合我：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/60424755\">hexo的next主题个性化配置</a></p>\n<hr>\n<h3 id=\"终、报错汇总\"><a href=\"#终、报错汇总\" class=\"headerlink\" title=\"终、报错汇总\"></a>终、报错汇总</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git g -d  </span><br></pre></td></tr></table></figure>\n\n<p>报错：<strong>fatal:  unable to access ‘h…://github.com/….github.io.git/</strong></p>\n<p>原因是git的代理出现问题？解决方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --unset git.proxy</span><br></pre></td></tr></table></figure>"},{"title":"解决Github无法访问","date":"2021-07-05T16:00:00.000Z","_content":"\n\n\n### \t一、修改host文件\n\n​\t在**C:\\Windows\\System32\\drivers\\etc**中打开**host**文件（可以用记事本打开），在该文件中添加如下内容。\n\n<!---more--->\n\n```\n# GitHub Start \n140.82.114.4 github.com\n140.82.114.4 gist.github.com\n185.199.108.153 assets-cdn.github.com\n151.101.64.133 raw.githubusercontent.com\n151.101.108.133 gist.githubusercontent.com\n151.101.108.133 cloud.githubusercontent.com\n151.101.108.133 camo.githubusercontent.com\n151.101.108.133 avatars0.githubusercontent.com\n151.101.108.133 avatars1.githubusercontent.com\n151.101.108.133 avatars2.githubusercontent.com\n151.101.108.133 avatars3.githubusercontent.com\n151.101.108.133 avatars4.githubusercontent.com\n151.101.108.133 avatars5.githubusercontent.com\n151.101.108.133 avatars6.githubusercontent.com\n151.101.108.133 avatars7.githubusercontent.com\n151.101.108.133 avatars8.githubusercontent.com \n# GitHub End\n```\n\n保存文件，再次打开github速度飞快\n\n\n\n------\n\n\n\n### \t二、win10修改文件读写的权限\n\n​\twindows系统可能遇到无法修改系统文件的问题\n\n​\t1.找到要修改的文件\n\n​\t2.右键→属性→安全→编辑→user\n\n​\t3.在允许编辑那一栏打勾\n","source":"_posts/2021-07-06-解决Github无法访问.md","raw":"---\ntitle: 解决Github无法访问\ndate: 2021-07-06\ncategories: 琐碎\ntags:\n  - github\t\n  - windows\n---\n\n\n\n### \t一、修改host文件\n\n​\t在**C:\\Windows\\System32\\drivers\\etc**中打开**host**文件（可以用记事本打开），在该文件中添加如下内容。\n\n<!---more--->\n\n```\n# GitHub Start \n140.82.114.4 github.com\n140.82.114.4 gist.github.com\n185.199.108.153 assets-cdn.github.com\n151.101.64.133 raw.githubusercontent.com\n151.101.108.133 gist.githubusercontent.com\n151.101.108.133 cloud.githubusercontent.com\n151.101.108.133 camo.githubusercontent.com\n151.101.108.133 avatars0.githubusercontent.com\n151.101.108.133 avatars1.githubusercontent.com\n151.101.108.133 avatars2.githubusercontent.com\n151.101.108.133 avatars3.githubusercontent.com\n151.101.108.133 avatars4.githubusercontent.com\n151.101.108.133 avatars5.githubusercontent.com\n151.101.108.133 avatars6.githubusercontent.com\n151.101.108.133 avatars7.githubusercontent.com\n151.101.108.133 avatars8.githubusercontent.com \n# GitHub End\n```\n\n保存文件，再次打开github速度飞快\n\n\n\n------\n\n\n\n### \t二、win10修改文件读写的权限\n\n​\twindows系统可能遇到无法修改系统文件的问题\n\n​\t1.找到要修改的文件\n\n​\t2.右键→属性→安全→编辑→user\n\n​\t3.在允许编辑那一栏打勾\n","slug":"2021-07-06-解决Github无法访问","published":1,"updated":"2021-07-08T06:55:08.880Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30x50003i0u09445dbhs","content":"<h3 id=\"一、修改host文件\"><a href=\"#一、修改host文件\" class=\"headerlink\" title=\"一、修改host文件\"></a>一、修改host文件</h3><p>​    在<strong>C:\\Windows\\System32\\drivers\\etc</strong>中打开<strong>host</strong>文件（可以用记事本打开），在该文件中添加如下内容。</p>\n<!---more--->\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># GitHub Start </span><br><span class=\"line\">140.82.114.4 github.com</span><br><span class=\"line\">140.82.114.4 gist.github.com</span><br><span class=\"line\">185.199.108.153 assets-cdn.github.com</span><br><span class=\"line\">151.101.64.133 raw.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 gist.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 cloud.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 camo.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars0.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars1.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars2.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars3.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars4.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars5.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars6.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars7.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars8.githubusercontent.com </span><br><span class=\"line\"># GitHub End</span><br></pre></td></tr></table></figure>\n\n<p>保存文件，再次打开github速度飞快</p>\n<hr>\n<h3 id=\"二、win10修改文件读写的权限\"><a href=\"#二、win10修改文件读写的权限\" class=\"headerlink\" title=\"二、win10修改文件读写的权限\"></a>二、win10修改文件读写的权限</h3><p>​    windows系统可能遇到无法修改系统文件的问题</p>\n<p>​    1.找到要修改的文件</p>\n<p>​    2.右键→属性→安全→编辑→user</p>\n<p>​    3.在允许编辑那一栏打勾</p>\n","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":"<h3 id=\"一、修改host文件\"><a href=\"#一、修改host文件\" class=\"headerlink\" title=\"一、修改host文件\"></a>一、修改host文件</h3><p>​    在<strong>C:\\Windows\\System32\\drivers\\etc</strong>中打开<strong>host</strong>文件（可以用记事本打开），在该文件中添加如下内容。</p>\n<!---more--->\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># GitHub Start </span><br><span class=\"line\">140.82.114.4 github.com</span><br><span class=\"line\">140.82.114.4 gist.github.com</span><br><span class=\"line\">185.199.108.153 assets-cdn.github.com</span><br><span class=\"line\">151.101.64.133 raw.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 gist.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 cloud.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 camo.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars0.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars1.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars2.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars3.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars4.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars5.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars6.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars7.githubusercontent.com</span><br><span class=\"line\">151.101.108.133 avatars8.githubusercontent.com </span><br><span class=\"line\"># GitHub End</span><br></pre></td></tr></table></figure>\n\n<p>保存文件，再次打开github速度飞快</p>\n<hr>\n<h3 id=\"二、win10修改文件读写的权限\"><a href=\"#二、win10修改文件读写的权限\" class=\"headerlink\" title=\"二、win10修改文件读写的权限\"></a>二、win10修改文件读写的权限</h3><p>​    windows系统可能遇到无法修改系统文件的问题</p>\n<p>​    1.找到要修改的文件</p>\n<p>​    2.右键→属性→安全→编辑→user</p>\n<p>​    3.在允许编辑那一栏打勾</p>\n"},{"title":"《Speed Down》Unity2d游戏开发（一）","date":"2021-07-06T09:45:05.000Z","_content":"\n\n\n### \t\t\t始、版本\n\nunity 2021.1.12f1c1\n\nunityhub 2.4.13\n\nvs 2019\n\n<!---more--->\n\n---\n\n\n\n### \t\t\t\t一、导入素材\n\n1.新建unity2d项目\n\n2.在assetstore中查找 Pixel Adventure 1并添加到我的资源\n\n3.在unity中打开Package Manager → My Assets → Pixel Adventure 1，下载并导入项目中\n\n资源栏就出现这个包啦！\n\n\n\n---\n\n\n\n### \t\t\t二、切换发布平台\n\n1.点击file → build setting → Android → switch platform\n\n2.发现自己unity没有这个模块，要手动在unityhub安装模块\n\n3.发现没有添加模块的按钮，要移除版本，前往官网找到改版本并选择从unityhub中下载\n\n4.添加下载Android Target Support\n\n\n\n---\n\n\n\n### \t\t\t三、背景图案设置\n\n1.新建3d object → quad，reset位置，设置scale中x为9，y为16\n\n2.调整主摄像机，包裹场景\n\n3.新建材质球background，修改shader为unlit → texture\n\n4.选择喜欢的背景图案，更改pixel per unit为64，拖到材质球中\n\n5.添加材质球到quad中\n\n6.相机中没有图片，因为相机和场景重叠了，修改相机z轴位置为-10\n\n简单的背景图片出现了，现在想要背景图案变成多个重复的图案，并且可以循环移动：\n\n7.设置图案advanced → wrap mode → repeat，表示图案是可以循环重复的（记得apply）\n\n8.更改材质球的tilling就可以看到场景图案铺垫的样子，可以看到改变offset的值就可以让场景移动\n\n\n\n---\n\n\n\n### \t\t四、脚本实现背景移动\n\n1.新建c#脚本，等unity加载完毕（右下角有转圈标识，没加载完就操作会出现奇怪的错误）\n\n2.编写脚本：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BackgroundMove : MonoBehaviour\n{\n    Material material;\n    Vector2 movement;\n\n    public Vector2 speed;\n    void Start()\n    {\n        material = GetComponent<Renderer>().material;\n    }\n\n    void Update()\n    {\n        movement += speed * Time.deltaTime;\n        material.mainTextureOffset = movement;\n    }\n}\n```\n\n注意：获取material时是获取组件Renderer中的material，即“material是Renderer的material”\n\n这样就可以通过改变背景脚本一栏中的speed来改变背景移动速度\n\n\n\n---\n\n\n\n### \t五、添加顶部尖刺\n\n1.找到素材中的spikes，修改pixel per unit 为16\n\n2.新建空物体TopSpikes用来存储所有的顶部尖刺\n\n3.将尖刺图案拖拽到TopSpikes下方成为子物体\n\n4.修改尖刺的rotation → z 为18翻转尖刺，修改scale → y为2延长图案\n\n5.按住`V`可以选择锚点对齐放置，`ctrl + d`复制物体，重复步骤直到填满顶部\n\n6.全选尖刺，添加组件polygon collider 2d 多边形碰撞体，打勾used by composite，即把这些尖刺的碰撞体合并起来\n\n7.添加组件composite collider 2d ，此时会自动添加rigibody 2d\n\n8.将rigibody 2d → body type改为static，这样尖刺就保持在原地不会掉下去\n\n9.调整composite collider 2d → offset 可以改变碰撞体的位置\n\n\n\n---\n\n\n\n### \t终、未完待续\n\n基本的场景搭建已经完成！\n","source":"_posts/2021-07-06-《Speed Down》Unity2d游戏开发（一）.md","raw":"---\ntitle: 《Speed Down》Unity2d游戏开发（一）\ndate: 2021-07-06 17:45:05\ncategories: unity\ntags:\n  - unity\n  - c#\n  - unityhub\n  - 2d\n---\n\n\n\n### \t\t\t始、版本\n\nunity 2021.1.12f1c1\n\nunityhub 2.4.13\n\nvs 2019\n\n<!---more--->\n\n---\n\n\n\n### \t\t\t\t一、导入素材\n\n1.新建unity2d项目\n\n2.在assetstore中查找 Pixel Adventure 1并添加到我的资源\n\n3.在unity中打开Package Manager → My Assets → Pixel Adventure 1，下载并导入项目中\n\n资源栏就出现这个包啦！\n\n\n\n---\n\n\n\n### \t\t\t二、切换发布平台\n\n1.点击file → build setting → Android → switch platform\n\n2.发现自己unity没有这个模块，要手动在unityhub安装模块\n\n3.发现没有添加模块的按钮，要移除版本，前往官网找到改版本并选择从unityhub中下载\n\n4.添加下载Android Target Support\n\n\n\n---\n\n\n\n### \t\t\t三、背景图案设置\n\n1.新建3d object → quad，reset位置，设置scale中x为9，y为16\n\n2.调整主摄像机，包裹场景\n\n3.新建材质球background，修改shader为unlit → texture\n\n4.选择喜欢的背景图案，更改pixel per unit为64，拖到材质球中\n\n5.添加材质球到quad中\n\n6.相机中没有图片，因为相机和场景重叠了，修改相机z轴位置为-10\n\n简单的背景图片出现了，现在想要背景图案变成多个重复的图案，并且可以循环移动：\n\n7.设置图案advanced → wrap mode → repeat，表示图案是可以循环重复的（记得apply）\n\n8.更改材质球的tilling就可以看到场景图案铺垫的样子，可以看到改变offset的值就可以让场景移动\n\n\n\n---\n\n\n\n### \t\t四、脚本实现背景移动\n\n1.新建c#脚本，等unity加载完毕（右下角有转圈标识，没加载完就操作会出现奇怪的错误）\n\n2.编写脚本：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BackgroundMove : MonoBehaviour\n{\n    Material material;\n    Vector2 movement;\n\n    public Vector2 speed;\n    void Start()\n    {\n        material = GetComponent<Renderer>().material;\n    }\n\n    void Update()\n    {\n        movement += speed * Time.deltaTime;\n        material.mainTextureOffset = movement;\n    }\n}\n```\n\n注意：获取material时是获取组件Renderer中的material，即“material是Renderer的material”\n\n这样就可以通过改变背景脚本一栏中的speed来改变背景移动速度\n\n\n\n---\n\n\n\n### \t五、添加顶部尖刺\n\n1.找到素材中的spikes，修改pixel per unit 为16\n\n2.新建空物体TopSpikes用来存储所有的顶部尖刺\n\n3.将尖刺图案拖拽到TopSpikes下方成为子物体\n\n4.修改尖刺的rotation → z 为18翻转尖刺，修改scale → y为2延长图案\n\n5.按住`V`可以选择锚点对齐放置，`ctrl + d`复制物体，重复步骤直到填满顶部\n\n6.全选尖刺，添加组件polygon collider 2d 多边形碰撞体，打勾used by composite，即把这些尖刺的碰撞体合并起来\n\n7.添加组件composite collider 2d ，此时会自动添加rigibody 2d\n\n8.将rigibody 2d → body type改为static，这样尖刺就保持在原地不会掉下去\n\n9.调整composite collider 2d → offset 可以改变碰撞体的位置\n\n\n\n---\n\n\n\n### \t终、未完待续\n\n基本的场景搭建已经完成！\n","slug":"2021-07-06-《Speed Down》Unity2d游戏开发（一）","published":1,"updated":"2021-07-12T13:21:24.134Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30x80006i0u084zb0ltz","content":"<h3 id=\"始、版本\"><a href=\"#始、版本\" class=\"headerlink\" title=\"始、版本\"></a>始、版本</h3><p>unity 2021.1.12f1c1</p>\n<p>unityhub 2.4.13</p>\n<p>vs 2019</p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、导入素材\"><a href=\"#一、导入素材\" class=\"headerlink\" title=\"一、导入素材\"></a>一、导入素材</h3><p>1.新建unity2d项目</p>\n<p>2.在assetstore中查找 Pixel Adventure 1并添加到我的资源</p>\n<p>3.在unity中打开Package Manager → My Assets → Pixel Adventure 1，下载并导入项目中</p>\n<p>资源栏就出现这个包啦！</p>\n<hr>\n<h3 id=\"二、切换发布平台\"><a href=\"#二、切换发布平台\" class=\"headerlink\" title=\"二、切换发布平台\"></a>二、切换发布平台</h3><p>1.点击file → build setting → Android → switch platform</p>\n<p>2.发现自己unity没有这个模块，要手动在unityhub安装模块</p>\n<p>3.发现没有添加模块的按钮，要移除版本，前往官网找到改版本并选择从unityhub中下载</p>\n<p>4.添加下载Android Target Support</p>\n<hr>\n<h3 id=\"三、背景图案设置\"><a href=\"#三、背景图案设置\" class=\"headerlink\" title=\"三、背景图案设置\"></a>三、背景图案设置</h3><p>1.新建3d object → quad，reset位置，设置scale中x为9，y为16</p>\n<p>2.调整主摄像机，包裹场景</p>\n<p>3.新建材质球background，修改shader为unlit → texture</p>\n<p>4.选择喜欢的背景图案，更改pixel per unit为64，拖到材质球中</p>\n<p>5.添加材质球到quad中</p>\n<p>6.相机中没有图片，因为相机和场景重叠了，修改相机z轴位置为-10</p>\n<p>简单的背景图片出现了，现在想要背景图案变成多个重复的图案，并且可以循环移动：</p>\n<p>7.设置图案advanced → wrap mode → repeat，表示图案是可以循环重复的（记得apply）</p>\n<p>8.更改材质球的tilling就可以看到场景图案铺垫的样子，可以看到改变offset的值就可以让场景移动</p>\n<hr>\n<h3 id=\"四、脚本实现背景移动\"><a href=\"#四、脚本实现背景移动\" class=\"headerlink\" title=\"四、脚本实现背景移动\"></a>四、脚本实现背景移动</h3><p>1.新建c#脚本，等unity加载完毕（右下角有转圈标识，没加载完就操作会出现奇怪的错误）</p>\n<p>2.编写脚本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class BackgroundMove : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Material material;</span><br><span class=\"line\">    Vector2 movement;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Vector2 speed;</span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        material = GetComponent&lt;Renderer&gt;().material;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        movement += speed * Time.deltaTime;</span><br><span class=\"line\">        material.mainTextureOffset = movement;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意：获取material时是获取组件Renderer中的material，即“material是Renderer的material”</p>\n<p>这样就可以通过改变背景脚本一栏中的speed来改变背景移动速度</p>\n<hr>\n<h3 id=\"五、添加顶部尖刺\"><a href=\"#五、添加顶部尖刺\" class=\"headerlink\" title=\"五、添加顶部尖刺\"></a>五、添加顶部尖刺</h3><p>1.找到素材中的spikes，修改pixel per unit 为16</p>\n<p>2.新建空物体TopSpikes用来存储所有的顶部尖刺</p>\n<p>3.将尖刺图案拖拽到TopSpikes下方成为子物体</p>\n<p>4.修改尖刺的rotation → z 为18翻转尖刺，修改scale → y为2延长图案</p>\n<p>5.按住<code>V</code>可以选择锚点对齐放置，<code>ctrl + d</code>复制物体，重复步骤直到填满顶部</p>\n<p>6.全选尖刺，添加组件polygon collider 2d 多边形碰撞体，打勾used by composite，即把这些尖刺的碰撞体合并起来</p>\n<p>7.添加组件composite collider 2d ，此时会自动添加rigibody 2d</p>\n<p>8.将rigibody 2d → body type改为static，这样尖刺就保持在原地不会掉下去</p>\n<p>9.调整composite collider 2d → offset 可以改变碰撞体的位置</p>\n<hr>\n<h3 id=\"终、未完待续\"><a href=\"#终、未完待续\" class=\"headerlink\" title=\"终、未完待续\"></a>终、未完待续</h3><p>基本的场景搭建已经完成！</p>\n","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":"<h3 id=\"始、版本\"><a href=\"#始、版本\" class=\"headerlink\" title=\"始、版本\"></a>始、版本</h3><p>unity 2021.1.12f1c1</p>\n<p>unityhub 2.4.13</p>\n<p>vs 2019</p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、导入素材\"><a href=\"#一、导入素材\" class=\"headerlink\" title=\"一、导入素材\"></a>一、导入素材</h3><p>1.新建unity2d项目</p>\n<p>2.在assetstore中查找 Pixel Adventure 1并添加到我的资源</p>\n<p>3.在unity中打开Package Manager → My Assets → Pixel Adventure 1，下载并导入项目中</p>\n<p>资源栏就出现这个包啦！</p>\n<hr>\n<h3 id=\"二、切换发布平台\"><a href=\"#二、切换发布平台\" class=\"headerlink\" title=\"二、切换发布平台\"></a>二、切换发布平台</h3><p>1.点击file → build setting → Android → switch platform</p>\n<p>2.发现自己unity没有这个模块，要手动在unityhub安装模块</p>\n<p>3.发现没有添加模块的按钮，要移除版本，前往官网找到改版本并选择从unityhub中下载</p>\n<p>4.添加下载Android Target Support</p>\n<hr>\n<h3 id=\"三、背景图案设置\"><a href=\"#三、背景图案设置\" class=\"headerlink\" title=\"三、背景图案设置\"></a>三、背景图案设置</h3><p>1.新建3d object → quad，reset位置，设置scale中x为9，y为16</p>\n<p>2.调整主摄像机，包裹场景</p>\n<p>3.新建材质球background，修改shader为unlit → texture</p>\n<p>4.选择喜欢的背景图案，更改pixel per unit为64，拖到材质球中</p>\n<p>5.添加材质球到quad中</p>\n<p>6.相机中没有图片，因为相机和场景重叠了，修改相机z轴位置为-10</p>\n<p>简单的背景图片出现了，现在想要背景图案变成多个重复的图案，并且可以循环移动：</p>\n<p>7.设置图案advanced → wrap mode → repeat，表示图案是可以循环重复的（记得apply）</p>\n<p>8.更改材质球的tilling就可以看到场景图案铺垫的样子，可以看到改变offset的值就可以让场景移动</p>\n<hr>\n<h3 id=\"四、脚本实现背景移动\"><a href=\"#四、脚本实现背景移动\" class=\"headerlink\" title=\"四、脚本实现背景移动\"></a>四、脚本实现背景移动</h3><p>1.新建c#脚本，等unity加载完毕（右下角有转圈标识，没加载完就操作会出现奇怪的错误）</p>\n<p>2.编写脚本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class BackgroundMove : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Material material;</span><br><span class=\"line\">    Vector2 movement;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Vector2 speed;</span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        material = GetComponent&lt;Renderer&gt;().material;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        movement += speed * Time.deltaTime;</span><br><span class=\"line\">        material.mainTextureOffset = movement;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意：获取material时是获取组件Renderer中的material，即“material是Renderer的material”</p>\n<p>这样就可以通过改变背景脚本一栏中的speed来改变背景移动速度</p>\n<hr>\n<h3 id=\"五、添加顶部尖刺\"><a href=\"#五、添加顶部尖刺\" class=\"headerlink\" title=\"五、添加顶部尖刺\"></a>五、添加顶部尖刺</h3><p>1.找到素材中的spikes，修改pixel per unit 为16</p>\n<p>2.新建空物体TopSpikes用来存储所有的顶部尖刺</p>\n<p>3.将尖刺图案拖拽到TopSpikes下方成为子物体</p>\n<p>4.修改尖刺的rotation → z 为18翻转尖刺，修改scale → y为2延长图案</p>\n<p>5.按住<code>V</code>可以选择锚点对齐放置，<code>ctrl + d</code>复制物体，重复步骤直到填满顶部</p>\n<p>6.全选尖刺，添加组件polygon collider 2d 多边形碰撞体，打勾used by composite，即把这些尖刺的碰撞体合并起来</p>\n<p>7.添加组件composite collider 2d ，此时会自动添加rigibody 2d</p>\n<p>8.将rigibody 2d → body type改为static，这样尖刺就保持在原地不会掉下去</p>\n<p>9.调整composite collider 2d → offset 可以改变碰撞体的位置</p>\n<hr>\n<h3 id=\"终、未完待续\"><a href=\"#终、未完待续\" class=\"headerlink\" title=\"终、未完待续\"></a>终、未完待续</h3><p>基本的场景搭建已经完成！</p>\n"},{"title":"《Speed Down》Unity2d游戏开发（二）","date":"2021-07-13T07:50:11.000Z","_content":"\n\n\n### \t始、前言\n\n上一次已经完成了场景搭建，那么这次的主要任务就是制作跳跃平台\n\n\n\n<!---more--->\n\n---\n\n\n\n### \t一、普通平台\n\n1.选中pixel adventure 1 → assets → traps → falling platform 设置pixels per unit为16\n\n2.拖拽第一张图案到场景中，命名为BasePlatform\n\n3.新建BasePlatform的动画，将四个图案拖拽进动画中并调整采样率\n\n4.为BasePlatform添加碰撞器box collider 2d 并调整碰撞体积\n\n\n\n---\n\n\n\n### \t二、旋转平台\n\n1.前面的操作与上述普通平台相同，设置大小，命名，新建动画，添加碰撞器\n\n2.为了实现平台被碰撞时发生翻转，添加组件hinge joint 2d，可以设置旋转角度和速度等\n\n自动添加了rigidbody 2d，但是不取消也不会掉下来，为什么呢？\n\n猜测是joint关节会固定在背景里，超过一定的力才会 “脱臼”\n\n\n\n---\n\n\n\n### \t三、弹跳平台\n\n1.找到pixel adventure 1 → assets → traps → fan ，设置大小，命名，添加碰撞器\n\n2.这里新建两个动画，一个是静止时的动画，一个是启动时的动画（弹跳）\n\n3.新建脚本，实现碰撞时平台切换到弹跳动画：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FanRun : MonoBehaviour\n{\n    Animator animator;\n    void Start()\n    {\n        animator = GetComponent<Animator>();\n    }\n    private void OnCollisionEnter2D(Collision2D collision)\n    {\n        if (collision.gameObject.CompareTag(\"Player\"))\n        {\n            animator.Play(\"Fan_run\");\n        }\n    }\n}\n```\n\n当标签为Player的物体碰撞到此平台时就会切换到启动动画啦\n\n\n\n---\n\n\n\n### \t四、摆动链锤\n\n1.新建空物体SpikeBall，分别添加两个子物体pixel adventure 1 → assets → traps → spiked ball → 轴心和大锤\n\n2.调整父子物体的相对位置\n\n3.给大锤添加组件Distance Joint 2D，给轴心添加rigid body 2d并拖拽到大锤的链接体\n\n4.给大锤添加碰撞体circle collider 2d\n\n\n\n---\n\n\n\n### \t五、脚本实现平台上升\n\n新建脚本：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlatformUp : MonoBehaviour\n{\n    Vector3 movement;\n    public float speed;\n    void Start()\n    {\n        movement.y = speed;\n    }\n    void Update()\n    {\n        MovePlatform();\n    }\n    void MovePlatform()\n    {\n        transform.position += movement * Time.deltaTime;\n    }\n}\n```\n\n并挂载到所有的平台建筑下，这样就实现了平台的持续上升\n\n\n\n---\n\n\n\n### \t六、设置平台天花板\n\n平台总不能一直上升，要设置一个天花板，当平台到达天花板时就摧毁物体\n\n1.新建空物体TopLine移动到上方合适的位置，作为天花板\n\n2.在平台的上升代码中添加判断到达天花板的检测：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlatformUp : MonoBehaviour\n{\n    Vector3 movement;\n    public float speed;\n    GameObject topLine;\n\n    void Start()\n    {\n        movement.y = speed;\n        topLine = GameObject.Find(\"TopLine\");\n    }\n    void Update()\n    {\n        MovePlatform();\n    }\n\n    void MovePlatform()\n    {\n        transform.position += movement * Time.deltaTime;\n        if(transform.position.y > topLine.transform.position.y)\n        {\n            Destroy(gameObject);\n        }\n    }\n}\n```\n\n完成！平台到位自动销毁\n\n\n\n---\n\n\n\n### \t终、总结\n\n平台的制作到这就结束了！用到了几个joint组件，十分有趣\n\n","source":"_posts/2021-07-13-《Speed Down》Unity2d游戏开发（二）.md","raw":"---\ntitle: 《Speed Down》Unity2d游戏开发（二）\ndate: 2021-07-13 15:50:11\ncategories: unity\ntags:\n  - unity\n  - c#\n  - joint\n  - collider\n---\n\n\n\n### \t始、前言\n\n上一次已经完成了场景搭建，那么这次的主要任务就是制作跳跃平台\n\n\n\n<!---more--->\n\n---\n\n\n\n### \t一、普通平台\n\n1.选中pixel adventure 1 → assets → traps → falling platform 设置pixels per unit为16\n\n2.拖拽第一张图案到场景中，命名为BasePlatform\n\n3.新建BasePlatform的动画，将四个图案拖拽进动画中并调整采样率\n\n4.为BasePlatform添加碰撞器box collider 2d 并调整碰撞体积\n\n\n\n---\n\n\n\n### \t二、旋转平台\n\n1.前面的操作与上述普通平台相同，设置大小，命名，新建动画，添加碰撞器\n\n2.为了实现平台被碰撞时发生翻转，添加组件hinge joint 2d，可以设置旋转角度和速度等\n\n自动添加了rigidbody 2d，但是不取消也不会掉下来，为什么呢？\n\n猜测是joint关节会固定在背景里，超过一定的力才会 “脱臼”\n\n\n\n---\n\n\n\n### \t三、弹跳平台\n\n1.找到pixel adventure 1 → assets → traps → fan ，设置大小，命名，添加碰撞器\n\n2.这里新建两个动画，一个是静止时的动画，一个是启动时的动画（弹跳）\n\n3.新建脚本，实现碰撞时平台切换到弹跳动画：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FanRun : MonoBehaviour\n{\n    Animator animator;\n    void Start()\n    {\n        animator = GetComponent<Animator>();\n    }\n    private void OnCollisionEnter2D(Collision2D collision)\n    {\n        if (collision.gameObject.CompareTag(\"Player\"))\n        {\n            animator.Play(\"Fan_run\");\n        }\n    }\n}\n```\n\n当标签为Player的物体碰撞到此平台时就会切换到启动动画啦\n\n\n\n---\n\n\n\n### \t四、摆动链锤\n\n1.新建空物体SpikeBall，分别添加两个子物体pixel adventure 1 → assets → traps → spiked ball → 轴心和大锤\n\n2.调整父子物体的相对位置\n\n3.给大锤添加组件Distance Joint 2D，给轴心添加rigid body 2d并拖拽到大锤的链接体\n\n4.给大锤添加碰撞体circle collider 2d\n\n\n\n---\n\n\n\n### \t五、脚本实现平台上升\n\n新建脚本：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlatformUp : MonoBehaviour\n{\n    Vector3 movement;\n    public float speed;\n    void Start()\n    {\n        movement.y = speed;\n    }\n    void Update()\n    {\n        MovePlatform();\n    }\n    void MovePlatform()\n    {\n        transform.position += movement * Time.deltaTime;\n    }\n}\n```\n\n并挂载到所有的平台建筑下，这样就实现了平台的持续上升\n\n\n\n---\n\n\n\n### \t六、设置平台天花板\n\n平台总不能一直上升，要设置一个天花板，当平台到达天花板时就摧毁物体\n\n1.新建空物体TopLine移动到上方合适的位置，作为天花板\n\n2.在平台的上升代码中添加判断到达天花板的检测：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlatformUp : MonoBehaviour\n{\n    Vector3 movement;\n    public float speed;\n    GameObject topLine;\n\n    void Start()\n    {\n        movement.y = speed;\n        topLine = GameObject.Find(\"TopLine\");\n    }\n    void Update()\n    {\n        MovePlatform();\n    }\n\n    void MovePlatform()\n    {\n        transform.position += movement * Time.deltaTime;\n        if(transform.position.y > topLine.transform.position.y)\n        {\n            Destroy(gameObject);\n        }\n    }\n}\n```\n\n完成！平台到位自动销毁\n\n\n\n---\n\n\n\n### \t终、总结\n\n平台的制作到这就结束了！用到了几个joint组件，十分有趣\n\n","slug":"2021-07-13-《Speed Down》Unity2d游戏开发（二）","published":1,"updated":"2021-07-13T13:27:35.642Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30x90007i0u0a63w0tk7","content":"<h3 id=\"始、前言\"><a href=\"#始、前言\" class=\"headerlink\" title=\"始、前言\"></a>始、前言</h3><p>上一次已经完成了场景搭建，那么这次的主要任务就是制作跳跃平台</p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、普通平台\"><a href=\"#一、普通平台\" class=\"headerlink\" title=\"一、普通平台\"></a>一、普通平台</h3><p>1.选中pixel adventure 1 → assets → traps → falling platform 设置pixels per unit为16</p>\n<p>2.拖拽第一张图案到场景中，命名为BasePlatform</p>\n<p>3.新建BasePlatform的动画，将四个图案拖拽进动画中并调整采样率</p>\n<p>4.为BasePlatform添加碰撞器box collider 2d 并调整碰撞体积</p>\n<hr>\n<h3 id=\"二、旋转平台\"><a href=\"#二、旋转平台\" class=\"headerlink\" title=\"二、旋转平台\"></a>二、旋转平台</h3><p>1.前面的操作与上述普通平台相同，设置大小，命名，新建动画，添加碰撞器</p>\n<p>2.为了实现平台被碰撞时发生翻转，添加组件hinge joint 2d，可以设置旋转角度和速度等</p>\n<p>自动添加了rigidbody 2d，但是不取消也不会掉下来，为什么呢？</p>\n<p>猜测是joint关节会固定在背景里，超过一定的力才会 “脱臼”</p>\n<hr>\n<h3 id=\"三、弹跳平台\"><a href=\"#三、弹跳平台\" class=\"headerlink\" title=\"三、弹跳平台\"></a>三、弹跳平台</h3><p>1.找到pixel adventure 1 → assets → traps → fan ，设置大小，命名，添加碰撞器</p>\n<p>2.这里新建两个动画，一个是静止时的动画，一个是启动时的动画（弹跳）</p>\n<p>3.新建脚本，实现碰撞时平台切换到弹跳动画：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class FanRun : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Animator animator;</span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        animator = GetComponent&lt;Animator&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    private void OnCollisionEnter2D(Collision2D collision)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (collision.gameObject.CompareTag(&quot;Player&quot;))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            animator.Play(&quot;Fan_run&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当标签为Player的物体碰撞到此平台时就会切换到启动动画啦</p>\n<hr>\n<h3 id=\"四、摆动链锤\"><a href=\"#四、摆动链锤\" class=\"headerlink\" title=\"四、摆动链锤\"></a>四、摆动链锤</h3><p>1.新建空物体SpikeBall，分别添加两个子物体pixel adventure 1 → assets → traps → spiked ball → 轴心和大锤</p>\n<p>2.调整父子物体的相对位置</p>\n<p>3.给大锤添加组件Distance Joint 2D，给轴心添加rigid body 2d并拖拽到大锤的链接体</p>\n<p>4.给大锤添加碰撞体circle collider 2d</p>\n<hr>\n<h3 id=\"五、脚本实现平台上升\"><a href=\"#五、脚本实现平台上升\" class=\"headerlink\" title=\"五、脚本实现平台上升\"></a>五、脚本实现平台上升</h3><p>新建脚本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class PlatformUp : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Vector3 movement;</span><br><span class=\"line\">    public float speed;</span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        movement.y = speed;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MovePlatform();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    void MovePlatform()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        transform.position += movement * Time.deltaTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>并挂载到所有的平台建筑下，这样就实现了平台的持续上升</p>\n<hr>\n<h3 id=\"六、设置平台天花板\"><a href=\"#六、设置平台天花板\" class=\"headerlink\" title=\"六、设置平台天花板\"></a>六、设置平台天花板</h3><p>平台总不能一直上升，要设置一个天花板，当平台到达天花板时就摧毁物体</p>\n<p>1.新建空物体TopLine移动到上方合适的位置，作为天花板</p>\n<p>2.在平台的上升代码中添加判断到达天花板的检测：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class PlatformUp : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Vector3 movement;</span><br><span class=\"line\">    public float speed;</span><br><span class=\"line\">    GameObject topLine;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        movement.y = speed;</span><br><span class=\"line\">        topLine = GameObject.Find(&quot;TopLine&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MovePlatform();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void MovePlatform()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        transform.position += movement * Time.deltaTime;</span><br><span class=\"line\">        if(transform.position.y &gt; topLine.transform.position.y)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Destroy(gameObject);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成！平台到位自动销毁</p>\n<hr>\n<h3 id=\"终、总结\"><a href=\"#终、总结\" class=\"headerlink\" title=\"终、总结\"></a>终、总结</h3><p>平台的制作到这就结束了！用到了几个joint组件，十分有趣</p>\n","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":"<h3 id=\"始、前言\"><a href=\"#始、前言\" class=\"headerlink\" title=\"始、前言\"></a>始、前言</h3><p>上一次已经完成了场景搭建，那么这次的主要任务就是制作跳跃平台</p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、普通平台\"><a href=\"#一、普通平台\" class=\"headerlink\" title=\"一、普通平台\"></a>一、普通平台</h3><p>1.选中pixel adventure 1 → assets → traps → falling platform 设置pixels per unit为16</p>\n<p>2.拖拽第一张图案到场景中，命名为BasePlatform</p>\n<p>3.新建BasePlatform的动画，将四个图案拖拽进动画中并调整采样率</p>\n<p>4.为BasePlatform添加碰撞器box collider 2d 并调整碰撞体积</p>\n<hr>\n<h3 id=\"二、旋转平台\"><a href=\"#二、旋转平台\" class=\"headerlink\" title=\"二、旋转平台\"></a>二、旋转平台</h3><p>1.前面的操作与上述普通平台相同，设置大小，命名，新建动画，添加碰撞器</p>\n<p>2.为了实现平台被碰撞时发生翻转，添加组件hinge joint 2d，可以设置旋转角度和速度等</p>\n<p>自动添加了rigidbody 2d，但是不取消也不会掉下来，为什么呢？</p>\n<p>猜测是joint关节会固定在背景里，超过一定的力才会 “脱臼”</p>\n<hr>\n<h3 id=\"三、弹跳平台\"><a href=\"#三、弹跳平台\" class=\"headerlink\" title=\"三、弹跳平台\"></a>三、弹跳平台</h3><p>1.找到pixel adventure 1 → assets → traps → fan ，设置大小，命名，添加碰撞器</p>\n<p>2.这里新建两个动画，一个是静止时的动画，一个是启动时的动画（弹跳）</p>\n<p>3.新建脚本，实现碰撞时平台切换到弹跳动画：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class FanRun : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Animator animator;</span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        animator = GetComponent&lt;Animator&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    private void OnCollisionEnter2D(Collision2D collision)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (collision.gameObject.CompareTag(&quot;Player&quot;))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            animator.Play(&quot;Fan_run&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当标签为Player的物体碰撞到此平台时就会切换到启动动画啦</p>\n<hr>\n<h3 id=\"四、摆动链锤\"><a href=\"#四、摆动链锤\" class=\"headerlink\" title=\"四、摆动链锤\"></a>四、摆动链锤</h3><p>1.新建空物体SpikeBall，分别添加两个子物体pixel adventure 1 → assets → traps → spiked ball → 轴心和大锤</p>\n<p>2.调整父子物体的相对位置</p>\n<p>3.给大锤添加组件Distance Joint 2D，给轴心添加rigid body 2d并拖拽到大锤的链接体</p>\n<p>4.给大锤添加碰撞体circle collider 2d</p>\n<hr>\n<h3 id=\"五、脚本实现平台上升\"><a href=\"#五、脚本实现平台上升\" class=\"headerlink\" title=\"五、脚本实现平台上升\"></a>五、脚本实现平台上升</h3><p>新建脚本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class PlatformUp : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Vector3 movement;</span><br><span class=\"line\">    public float speed;</span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        movement.y = speed;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MovePlatform();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    void MovePlatform()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        transform.position += movement * Time.deltaTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>并挂载到所有的平台建筑下，这样就实现了平台的持续上升</p>\n<hr>\n<h3 id=\"六、设置平台天花板\"><a href=\"#六、设置平台天花板\" class=\"headerlink\" title=\"六、设置平台天花板\"></a>六、设置平台天花板</h3><p>平台总不能一直上升，要设置一个天花板，当平台到达天花板时就摧毁物体</p>\n<p>1.新建空物体TopLine移动到上方合适的位置，作为天花板</p>\n<p>2.在平台的上升代码中添加判断到达天花板的检测：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class PlatformUp : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Vector3 movement;</span><br><span class=\"line\">    public float speed;</span><br><span class=\"line\">    GameObject topLine;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        movement.y = speed;</span><br><span class=\"line\">        topLine = GameObject.Find(&quot;TopLine&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MovePlatform();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void MovePlatform()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        transform.position += movement * Time.deltaTime;</span><br><span class=\"line\">        if(transform.position.y &gt; topLine.transform.position.y)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Destroy(gameObject);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成！平台到位自动销毁</p>\n<hr>\n<h3 id=\"终、总结\"><a href=\"#终、总结\" class=\"headerlink\" title=\"终、总结\"></a>终、总结</h3><p>平台的制作到这就结束了！用到了几个joint组件，十分有趣</p>\n"},{"title":"再临Unity","date":"2021-07-08T10:29:49.000Z","_content":"\n\n\n\n\n# \t淦！\n\n\n\n### \t\t始、整理\n\n​\t闲来无事，想捣鼓一下unity，打开界面一脸懵逼。明明大学玩过一段时间的，这知识咋就不进脑子呢，又得重新学习\n\n<!---more--->\n\n------\n\n\n\n### \t\t一、Unity快速入门\n\n​\tunity的布局和一些用过的工具多少有些联系，搞懂界面还是不难的，先从常用操作入手吧！正好找到一个最近的精简unity入门视频：\n\n[游戏开发-Unity 光速入门](ttps://www.bilibili.com/video/BV1Yh411h7zk?p=2)\n\n\n\n------\n\n\n\n### \t\t二、C#\n\n​\tunity脚本编写用到c#，这语言光说入门还是比较轻松的：\n\n[快速学完C#编程](https://www.bilibili.com/video/BV1sy4y1u7cw)\n\n\n\n------\n\n\n\n### \t\t三、像素画资源\n\n​\t做点2D像素风练练手，资源就用PS自己画吧：\n\n[使用Photoshop绘制像素画](https://www.bilibili.com/video/BV1o4411V7dv)\n\n\n\n------\n\n\n\n### \t四、教程视频\n\nM大的教学对新手玩家真的友好，不愧是unity官方认证\n\n[M_Studio的个人空间](https://space.bilibili.com/370283072?spm_id_from=333.788.b_636f6d6d656e74.1)\n\n","source":"_posts/2021-07-08-再临Unity.md","raw":"---\ntitle: 再临Unity\ndate: 2021-07-08 18:29:49\ncategories: 琐碎\ntags:\n  - unity\n  - c#\n  - ps\n  - 像素\n---\n\n\n\n\n\n# \t淦！\n\n\n\n### \t\t始、整理\n\n​\t闲来无事，想捣鼓一下unity，打开界面一脸懵逼。明明大学玩过一段时间的，这知识咋就不进脑子呢，又得重新学习\n\n<!---more--->\n\n------\n\n\n\n### \t\t一、Unity快速入门\n\n​\tunity的布局和一些用过的工具多少有些联系，搞懂界面还是不难的，先从常用操作入手吧！正好找到一个最近的精简unity入门视频：\n\n[游戏开发-Unity 光速入门](ttps://www.bilibili.com/video/BV1Yh411h7zk?p=2)\n\n\n\n------\n\n\n\n### \t\t二、C#\n\n​\tunity脚本编写用到c#，这语言光说入门还是比较轻松的：\n\n[快速学完C#编程](https://www.bilibili.com/video/BV1sy4y1u7cw)\n\n\n\n------\n\n\n\n### \t\t三、像素画资源\n\n​\t做点2D像素风练练手，资源就用PS自己画吧：\n\n[使用Photoshop绘制像素画](https://www.bilibili.com/video/BV1o4411V7dv)\n\n\n\n------\n\n\n\n### \t四、教程视频\n\nM大的教学对新手玩家真的友好，不愧是unity官方认证\n\n[M_Studio的个人空间](https://space.bilibili.com/370283072?spm_id_from=333.788.b_636f6d6d656e74.1)\n\n","slug":"2021-07-08-再临Unity","published":1,"updated":"2021-07-11T00:46:53.839Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30xa0008i0u0fp4r6t6z","content":"<h1 id=\"淦！\"><a href=\"#淦！\" class=\"headerlink\" title=\"淦！\"></a>淦！</h1><h3 id=\"始、整理\"><a href=\"#始、整理\" class=\"headerlink\" title=\"始、整理\"></a>始、整理</h3><p>​    闲来无事，想捣鼓一下unity，打开界面一脸懵逼。明明大学玩过一段时间的，这知识咋就不进脑子呢，又得重新学习</p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、Unity快速入门\"><a href=\"#一、Unity快速入门\" class=\"headerlink\" title=\"一、Unity快速入门\"></a>一、Unity快速入门</h3><p>​    unity的布局和一些用过的工具多少有些联系，搞懂界面还是不难的，先从常用操作入手吧！正好找到一个最近的精简unity入门视频：</p>\n<p><a href=\"ttps://www.bilibili.com/video/BV1Yh411h7zk?p=2\">游戏开发-Unity 光速入门</a></p>\n<hr>\n<h3 id=\"二、C\"><a href=\"#二、C\" class=\"headerlink\" title=\"二、C#\"></a>二、C#</h3><p>​    unity脚本编写用到c#，这语言光说入门还是比较轻松的：</p>\n<p><a href=\"https://www.bilibili.com/video/BV1sy4y1u7cw\">快速学完C#编程</a></p>\n<hr>\n<h3 id=\"三、像素画资源\"><a href=\"#三、像素画资源\" class=\"headerlink\" title=\"三、像素画资源\"></a>三、像素画资源</h3><p>​    做点2D像素风练练手，资源就用PS自己画吧：</p>\n<p><a href=\"https://www.bilibili.com/video/BV1o4411V7dv\">使用Photoshop绘制像素画</a></p>\n<hr>\n<h3 id=\"四、教程视频\"><a href=\"#四、教程视频\" class=\"headerlink\" title=\"四、教程视频\"></a>四、教程视频</h3><p>M大的教学对新手玩家真的友好，不愧是unity官方认证</p>\n<p><a href=\"https://space.bilibili.com/370283072?spm_id_from=333.788.b_636f6d6d656e74.1\">M_Studio的个人空间</a></p>\n","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":"<h1 id=\"淦！\"><a href=\"#淦！\" class=\"headerlink\" title=\"淦！\"></a>淦！</h1><h3 id=\"始、整理\"><a href=\"#始、整理\" class=\"headerlink\" title=\"始、整理\"></a>始、整理</h3><p>​    闲来无事，想捣鼓一下unity，打开界面一脸懵逼。明明大学玩过一段时间的，这知识咋就不进脑子呢，又得重新学习</p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、Unity快速入门\"><a href=\"#一、Unity快速入门\" class=\"headerlink\" title=\"一、Unity快速入门\"></a>一、Unity快速入门</h3><p>​    unity的布局和一些用过的工具多少有些联系，搞懂界面还是不难的，先从常用操作入手吧！正好找到一个最近的精简unity入门视频：</p>\n<p><a href=\"ttps://www.bilibili.com/video/BV1Yh411h7zk?p=2\">游戏开发-Unity 光速入门</a></p>\n<hr>\n<h3 id=\"二、C\"><a href=\"#二、C\" class=\"headerlink\" title=\"二、C#\"></a>二、C#</h3><p>​    unity脚本编写用到c#，这语言光说入门还是比较轻松的：</p>\n<p><a href=\"https://www.bilibili.com/video/BV1sy4y1u7cw\">快速学完C#编程</a></p>\n<hr>\n<h3 id=\"三、像素画资源\"><a href=\"#三、像素画资源\" class=\"headerlink\" title=\"三、像素画资源\"></a>三、像素画资源</h3><p>​    做点2D像素风练练手，资源就用PS自己画吧：</p>\n<p><a href=\"https://www.bilibili.com/video/BV1o4411V7dv\">使用Photoshop绘制像素画</a></p>\n<hr>\n<h3 id=\"四、教程视频\"><a href=\"#四、教程视频\" class=\"headerlink\" title=\"四、教程视频\"></a>四、教程视频</h3><p>M大的教学对新手玩家真的友好，不愧是unity官方认证</p>\n<p><a href=\"https://space.bilibili.com/370283072?spm_id_from=333.788.b_636f6d6d656e74.1\">M_Studio的个人空间</a></p>\n"},{"title":"剪辑视频自我总结","date":"2021-07-06T06:32:25.000Z","_content":"\n\n\n\n\n### \t始、梳理\n\n1.视频剪辑用强大的**Premiere**\n\n\n\n2.因为目标是上传B站，而B站有CC字幕功能，可以视频和字幕分开做，减少工作量，这里选择：\n\n[网易见外工作台 (youdao.com)](https://jianwai.youdao.com/index/0)\n\n\n\n3.语音不想自己配音，使用了**迅捷文字转换语音**\n\n<!---more--->\n\n------\n\n\n\n### \t一、精简入门，了解Pr视频剪辑\n\n自认为学习新的软件使用不能一开始就看官网手册或完整教学，而是先获得一个大概的认知：\n\n[10分钟快速上手premiere剪辑！]([10分钟快速上手premiere剪辑！仅含1句废话，全程干货输出，带你了解pr工作逻辑，新人快速入门视频剪辑，真的好想让你看到第一次标题写这么长来表达激动的心情_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1h7411U7BX?from=search&seid=11730757113337564851))\n\n\n\n------\n\n\n\n### \t二、\n\n","source":"_posts/更2021-07-06-剪辑视频入门总结.md","raw":"---\ntitle: 剪辑视频自我总结\ndate: 2021-07-06 14:32:25\ncategories: 琐碎\ntags:\n  - pr\n---\n\n\n\n\n\n### \t始、梳理\n\n1.视频剪辑用强大的**Premiere**\n\n\n\n2.因为目标是上传B站，而B站有CC字幕功能，可以视频和字幕分开做，减少工作量，这里选择：\n\n[网易见外工作台 (youdao.com)](https://jianwai.youdao.com/index/0)\n\n\n\n3.语音不想自己配音，使用了**迅捷文字转换语音**\n\n<!---more--->\n\n------\n\n\n\n### \t一、精简入门，了解Pr视频剪辑\n\n自认为学习新的软件使用不能一开始就看官网手册或完整教学，而是先获得一个大概的认知：\n\n[10分钟快速上手premiere剪辑！]([10分钟快速上手premiere剪辑！仅含1句废话，全程干货输出，带你了解pr工作逻辑，新人快速入门视频剪辑，真的好想让你看到第一次标题写这么长来表达激动的心情_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1h7411U7BX?from=search&seid=11730757113337564851))\n\n\n\n------\n\n\n\n### \t二、\n\n","slug":"更2021-07-06-剪辑视频入门总结","published":1,"updated":"2021-07-14T12:54:26.364Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30xd000bi0u04e0q3v3f","content":"<h3 id=\"始、梳理\"><a href=\"#始、梳理\" class=\"headerlink\" title=\"始、梳理\"></a>始、梳理</h3><p>1.视频剪辑用强大的<strong>Premiere</strong></p>\n<p>2.因为目标是上传B站，而B站有CC字幕功能，可以视频和字幕分开做，减少工作量，这里选择：</p>\n<p><a href=\"https://jianwai.youdao.com/index/0\">网易见外工作台 (youdao.com)</a></p>\n<p>3.语音不想自己配音，使用了<strong>迅捷文字转换语音</strong></p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、精简入门，了解Pr视频剪辑\"><a href=\"#一、精简入门，了解Pr视频剪辑\" class=\"headerlink\" title=\"一、精简入门，了解Pr视频剪辑\"></a>一、精简入门，了解Pr视频剪辑</h3><p>自认为学习新的软件使用不能一开始就看官网手册或完整教学，而是先获得一个大概的认知：</p>\n<p><a href=\"%5B10%E5%88%86%E9%92%9F%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bpremiere%E5%89%AA%E8%BE%91%EF%BC%81%E4%BB%85%E5%90%AB1%E5%8F%A5%E5%BA%9F%E8%AF%9D%EF%BC%8C%E5%85%A8%E7%A8%8B%E5%B9%B2%E8%B4%A7%E8%BE%93%E5%87%BA%EF%BC%8C%E5%B8%A6%E4%BD%A0%E4%BA%86%E8%A7%A3pr%E5%B7%A5%E4%BD%9C%E9%80%BB%E8%BE%91%EF%BC%8C%E6%96%B0%E4%BA%BA%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91%EF%BC%8C%E7%9C%9F%E7%9A%84%E5%A5%BD%E6%83%B3%E8%AE%A9%E4%BD%A0%E7%9C%8B%E5%88%B0%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%A0%87%E9%A2%98%E5%86%99%E8%BF%99%E4%B9%88%E9%95%BF%E6%9D%A5%E8%A1%A8%E8%BE%BE%E6%BF%80%E5%8A%A8%E7%9A%84%E5%BF%83%E6%83%85_%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9_bilibili%5D(https://www.bilibili.com/video/BV1h7411U7BX?from=search&seid=11730757113337564851)\">10分钟快速上手premiere剪辑！</a></p>\n<hr>\n<h3 id=\"二、\"><a href=\"#二、\" class=\"headerlink\" title=\"二、\"></a>二、</h3>","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":"<h3 id=\"始、梳理\"><a href=\"#始、梳理\" class=\"headerlink\" title=\"始、梳理\"></a>始、梳理</h3><p>1.视频剪辑用强大的<strong>Premiere</strong></p>\n<p>2.因为目标是上传B站，而B站有CC字幕功能，可以视频和字幕分开做，减少工作量，这里选择：</p>\n<p><a href=\"https://jianwai.youdao.com/index/0\">网易见外工作台 (youdao.com)</a></p>\n<p>3.语音不想自己配音，使用了<strong>迅捷文字转换语音</strong></p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、精简入门，了解Pr视频剪辑\"><a href=\"#一、精简入门，了解Pr视频剪辑\" class=\"headerlink\" title=\"一、精简入门，了解Pr视频剪辑\"></a>一、精简入门，了解Pr视频剪辑</h3><p>自认为学习新的软件使用不能一开始就看官网手册或完整教学，而是先获得一个大概的认知：</p>\n<p><a href=\"%5B10%E5%88%86%E9%92%9F%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bpremiere%E5%89%AA%E8%BE%91%EF%BC%81%E4%BB%85%E5%90%AB1%E5%8F%A5%E5%BA%9F%E8%AF%9D%EF%BC%8C%E5%85%A8%E7%A8%8B%E5%B9%B2%E8%B4%A7%E8%BE%93%E5%87%BA%EF%BC%8C%E5%B8%A6%E4%BD%A0%E4%BA%86%E8%A7%A3pr%E5%B7%A5%E4%BD%9C%E9%80%BB%E8%BE%91%EF%BC%8C%E6%96%B0%E4%BA%BA%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91%EF%BC%8C%E7%9C%9F%E7%9A%84%E5%A5%BD%E6%83%B3%E8%AE%A9%E4%BD%A0%E7%9C%8B%E5%88%B0%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%A0%87%E9%A2%98%E5%86%99%E8%BF%99%E4%B9%88%E9%95%BF%E6%9D%A5%E8%A1%A8%E8%BE%BE%E6%BF%80%E5%8A%A8%E7%9A%84%E5%BF%83%E6%83%85_%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9_bilibili%5D(https://www.bilibili.com/video/BV1h7411U7BX?from=search&seid=11730757113337564851)\">10分钟快速上手premiere剪辑！</a></p>\n<hr>\n<h3 id=\"二、\"><a href=\"#二、\" class=\"headerlink\" title=\"二、\"></a>二、</h3>"},{"title":"《Speed Down》Unity2d游戏开发（三）","date":"2021-07-14T08:16:29.000Z","_content":"\n\n\n### \t始、前言\n\n背景和障碍物都搭建完毕了，现在来制作我们操作的主角！（洗个衣服先...）\n\n\n\n<!---more--->\n\n---\n\n\n\n### \t一、添加动画及组件\n\n1.先选中资源中喜欢的角色，修改所有精灵图的ppu为32\n\n2.制作动画，idle、run、jump、hit\n\n3.添加组件rigidbody 2d并且勾选constraints → freeze rotation → z 以此锁定z轴，防止碰撞时产生z轴翻转\n\n4.添加碰撞组件box collider 2d\n\n\n\n---\n\n\n\n### \t二、脚本控制主角\n\n添加脚本：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerController : MonoBehaviour\n{\n    Rigidbody2D rb;\n    Animator anim;\n    public float speed;\n    float xVelocity;\n\n    void Start()\n    {\n        rb = GetComponent<Rigidbody2D>();\n        anim = GetComponent<Animator>();\n    }\n\n    void Update()\n    {\n        Movement();\n    }\n\n    void Movement()\n    {\n        xVelocity = Input.GetAxisRaw(\"Horizontal\");\n        rb.velocity = new Vector2(xVelocity * speed, rb.velocity.y);\n\n        if(xVelocity != 0)\n        {\n            transform.localScale = new Vector3(xVelocity, 1, 1);\n        }\n    }\n}\n```\n\n挂载到角色上，就可以用方向键控制左右移动了（wsad也可以）\n\n并且`transform.localScale = new Vector3(xVelocity, 1, 1);`还实现了图案的左右翻转（之前我还傻傻地自己画各个方向的图）\n\n\n\n---\n\n\n\n### \t三、切换跑步动画\n\n1.打开player的Animator界面，相互连接idle和run，新建speed变量，设置idle转换为run的条件为speed大于0.1，run转换为idle的条件为speed小于0.1，同时记得调整转换时间和混合时间等设置（这里全部取消）\n\n2.在`void Movement()`中添加代码：\n\n```\nanim.SetFloat(\"speed\", Mathf.Abs(rb.velocity.x));\n```\n\n\n\n---\n\n\n\n### \t四、切换下落动画\n\n1.动画all和idle相互连接，创建isOnGround变量来检测是否在平台上，把所有平台的Layer都改成新的Platform\n\n2.添加代码：\n\n```\n    public bool isOnGround;\n    public float checkRadius;\n    public LayerMask layer;\n    public GameObject groundCheck;\n    \n    void Update()\n    {\n        Movement();\n        isOnGround = Physics2D.OverlapCircle(groundCheck.transform.position, checkRadius, layer);\n        anim.SetBool(\"isOnGround\", isOnGround);\n    } \n```\n\n3.在角色物体下方添加子物体CheckPoint并拖拽入角色的检测点位置\n\n4.修改参数就可以实现踩到平台时触发isOnGround，并且由fall动画转换到idle动画\n\n但是现在看不见检测范围，只能大致估计，怎么办呢？\n\n小技巧：添加代码：\n\n```\n    private void OnDrawGizmosSelected()\n    {\n        Gizmos.color = Color.green;\n        Gizmos.DrawWireSphere(groundCheck.transform.position, checkRadius);\n    }\n```\n\n上述代码是unity内置的方法，可以把检测范围可视化\n\n---\n\n\n\n### \t五、切换死亡动画\n\n1.修改尖刺的tag为新的Spike，状态机新建trigger型变量isDead，将Any State 连接到hit调整转换条件，这样就可以从任何状态转换到死亡状态\n\n2.添加代码：\n\n```\n    private void OnTriggerEnter2D(Collider2D collision)\n    {\n        if (collision.CompareTag(\"Spike\"))\n        {\n            anim.SetTrigger(\"isDead\");\n        }\n    }\n```\n\n这样就实现了播放死亡动画，接下来再加一个表示角色死亡的标志\n\n3.添加代码：\n\n```\n    public bool playerDead;\n    \n    public void PlayerDead()\n    {\n        playerDead = true;\n    }\n```\n\n4.找到玩家死亡的动画效果，在最后一帧添加函数`PlayerDead()`\n\n\n\n---\n\n\n\n### \t六、实现跳跃平台的跳跃效果\n\n1.设置跳跃平台的tag为新的Fan\n\n2.添加代码：\n\n```\n    public float bounceH;\n    \n    private void OnCollisionEnter2D(Collision2D collision)\n    {\n        if (collision.gameObject.CompareTag(\"Fan\"))\n        {\n            rb.velocity = new Vector2(rb.velocity.x, bounceH);\n        }\n    }\n```\n\n这样以来，角色碰到跳跃平台时就会给rigidbody产生向上的大小为bounceH的力（就是被打飞了）\n\n发现之前说好的跳跃平台碰到角色会转起来现在好像没有转，原来是主角的tag没有设置成Player\n\n完美！\n\n\n\n---\n\n\n\n### \t终、吐槽\n\n角色的各种动画转换也太复杂了！难道每次添加一个新的动作就要和所有的动作一起调整吗，天啊！有没有简单的方法啊，快浇浇我吧！\n\n","source":"_posts/2021-07-14-《Speed Down》Unity2d游戏开发（三）.md","raw":"---\ntitle: 《Speed Down》Unity2d游戏开发（三）\ndate: 2021-07-14 16:16:29\ncategories:\tunity\ntags:\n  - unity\n  - c#\n  - animator\n  - trigger\n  - collider\n---\n\n\n\n### \t始、前言\n\n背景和障碍物都搭建完毕了，现在来制作我们操作的主角！（洗个衣服先...）\n\n\n\n<!---more--->\n\n---\n\n\n\n### \t一、添加动画及组件\n\n1.先选中资源中喜欢的角色，修改所有精灵图的ppu为32\n\n2.制作动画，idle、run、jump、hit\n\n3.添加组件rigidbody 2d并且勾选constraints → freeze rotation → z 以此锁定z轴，防止碰撞时产生z轴翻转\n\n4.添加碰撞组件box collider 2d\n\n\n\n---\n\n\n\n### \t二、脚本控制主角\n\n添加脚本：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerController : MonoBehaviour\n{\n    Rigidbody2D rb;\n    Animator anim;\n    public float speed;\n    float xVelocity;\n\n    void Start()\n    {\n        rb = GetComponent<Rigidbody2D>();\n        anim = GetComponent<Animator>();\n    }\n\n    void Update()\n    {\n        Movement();\n    }\n\n    void Movement()\n    {\n        xVelocity = Input.GetAxisRaw(\"Horizontal\");\n        rb.velocity = new Vector2(xVelocity * speed, rb.velocity.y);\n\n        if(xVelocity != 0)\n        {\n            transform.localScale = new Vector3(xVelocity, 1, 1);\n        }\n    }\n}\n```\n\n挂载到角色上，就可以用方向键控制左右移动了（wsad也可以）\n\n并且`transform.localScale = new Vector3(xVelocity, 1, 1);`还实现了图案的左右翻转（之前我还傻傻地自己画各个方向的图）\n\n\n\n---\n\n\n\n### \t三、切换跑步动画\n\n1.打开player的Animator界面，相互连接idle和run，新建speed变量，设置idle转换为run的条件为speed大于0.1，run转换为idle的条件为speed小于0.1，同时记得调整转换时间和混合时间等设置（这里全部取消）\n\n2.在`void Movement()`中添加代码：\n\n```\nanim.SetFloat(\"speed\", Mathf.Abs(rb.velocity.x));\n```\n\n\n\n---\n\n\n\n### \t四、切换下落动画\n\n1.动画all和idle相互连接，创建isOnGround变量来检测是否在平台上，把所有平台的Layer都改成新的Platform\n\n2.添加代码：\n\n```\n    public bool isOnGround;\n    public float checkRadius;\n    public LayerMask layer;\n    public GameObject groundCheck;\n    \n    void Update()\n    {\n        Movement();\n        isOnGround = Physics2D.OverlapCircle(groundCheck.transform.position, checkRadius, layer);\n        anim.SetBool(\"isOnGround\", isOnGround);\n    } \n```\n\n3.在角色物体下方添加子物体CheckPoint并拖拽入角色的检测点位置\n\n4.修改参数就可以实现踩到平台时触发isOnGround，并且由fall动画转换到idle动画\n\n但是现在看不见检测范围，只能大致估计，怎么办呢？\n\n小技巧：添加代码：\n\n```\n    private void OnDrawGizmosSelected()\n    {\n        Gizmos.color = Color.green;\n        Gizmos.DrawWireSphere(groundCheck.transform.position, checkRadius);\n    }\n```\n\n上述代码是unity内置的方法，可以把检测范围可视化\n\n---\n\n\n\n### \t五、切换死亡动画\n\n1.修改尖刺的tag为新的Spike，状态机新建trigger型变量isDead，将Any State 连接到hit调整转换条件，这样就可以从任何状态转换到死亡状态\n\n2.添加代码：\n\n```\n    private void OnTriggerEnter2D(Collider2D collision)\n    {\n        if (collision.CompareTag(\"Spike\"))\n        {\n            anim.SetTrigger(\"isDead\");\n        }\n    }\n```\n\n这样就实现了播放死亡动画，接下来再加一个表示角色死亡的标志\n\n3.添加代码：\n\n```\n    public bool playerDead;\n    \n    public void PlayerDead()\n    {\n        playerDead = true;\n    }\n```\n\n4.找到玩家死亡的动画效果，在最后一帧添加函数`PlayerDead()`\n\n\n\n---\n\n\n\n### \t六、实现跳跃平台的跳跃效果\n\n1.设置跳跃平台的tag为新的Fan\n\n2.添加代码：\n\n```\n    public float bounceH;\n    \n    private void OnCollisionEnter2D(Collision2D collision)\n    {\n        if (collision.gameObject.CompareTag(\"Fan\"))\n        {\n            rb.velocity = new Vector2(rb.velocity.x, bounceH);\n        }\n    }\n```\n\n这样以来，角色碰到跳跃平台时就会给rigidbody产生向上的大小为bounceH的力（就是被打飞了）\n\n发现之前说好的跳跃平台碰到角色会转起来现在好像没有转，原来是主角的tag没有设置成Player\n\n完美！\n\n\n\n---\n\n\n\n### \t终、吐槽\n\n角色的各种动画转换也太复杂了！难道每次添加一个新的动作就要和所有的动作一起调整吗，天啊！有没有简单的方法啊，快浇浇我吧！\n\n","slug":"2021-07-14-《Speed Down》Unity2d游戏开发（三）","published":1,"updated":"2021-07-14T12:57:23.646Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30xe000ci0u01lrthxii","content":"<h3 id=\"始、前言\"><a href=\"#始、前言\" class=\"headerlink\" title=\"始、前言\"></a>始、前言</h3><p>背景和障碍物都搭建完毕了，现在来制作我们操作的主角！（洗个衣服先…）</p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、添加动画及组件\"><a href=\"#一、添加动画及组件\" class=\"headerlink\" title=\"一、添加动画及组件\"></a>一、添加动画及组件</h3><p>1.先选中资源中喜欢的角色，修改所有精灵图的ppu为32</p>\n<p>2.制作动画，idle、run、jump、hit</p>\n<p>3.添加组件rigidbody 2d并且勾选constraints → freeze rotation → z 以此锁定z轴，防止碰撞时产生z轴翻转</p>\n<p>4.添加碰撞组件box collider 2d</p>\n<hr>\n<h3 id=\"二、脚本控制主角\"><a href=\"#二、脚本控制主角\" class=\"headerlink\" title=\"二、脚本控制主角\"></a>二、脚本控制主角</h3><p>添加脚本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class PlayerController : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Rigidbody2D rb;</span><br><span class=\"line\">    Animator anim;</span><br><span class=\"line\">    public float speed;</span><br><span class=\"line\">    float xVelocity;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class=\"line\">        anim = GetComponent&lt;Animator&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Movement();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Movement()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        xVelocity = Input.GetAxisRaw(&quot;Horizontal&quot;);</span><br><span class=\"line\">        rb.velocity = new Vector2(xVelocity * speed, rb.velocity.y);</span><br><span class=\"line\"></span><br><span class=\"line\">        if(xVelocity != 0)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            transform.localScale = new Vector3(xVelocity, 1, 1);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>挂载到角色上，就可以用方向键控制左右移动了（wsad也可以）</p>\n<p>并且<code>transform.localScale = new Vector3(xVelocity, 1, 1);</code>还实现了图案的左右翻转（之前我还傻傻地自己画各个方向的图）</p>\n<hr>\n<h3 id=\"三、切换跑步动画\"><a href=\"#三、切换跑步动画\" class=\"headerlink\" title=\"三、切换跑步动画\"></a>三、切换跑步动画</h3><p>1.打开player的Animator界面，相互连接idle和run，新建speed变量，设置idle转换为run的条件为speed大于0.1，run转换为idle的条件为speed小于0.1，同时记得调整转换时间和混合时间等设置（这里全部取消）</p>\n<p>2.在<code>void Movement()</code>中添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anim.SetFloat(&quot;speed&quot;, Mathf.Abs(rb.velocity.x));</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"四、切换下落动画\"><a href=\"#四、切换下落动画\" class=\"headerlink\" title=\"四、切换下落动画\"></a>四、切换下落动画</h3><p>1.动画all和idle相互连接，创建isOnGround变量来检测是否在平台上，把所有平台的Layer都改成新的Platform</p>\n<p>2.添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public bool isOnGround;</span><br><span class=\"line\">public float checkRadius;</span><br><span class=\"line\">public LayerMask layer;</span><br><span class=\"line\">public GameObject groundCheck;</span><br><span class=\"line\"></span><br><span class=\"line\">void Update()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Movement();</span><br><span class=\"line\">    isOnGround = Physics2D.OverlapCircle(groundCheck.transform.position, checkRadius, layer);</span><br><span class=\"line\">    anim.SetBool(&quot;isOnGround&quot;, isOnGround);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>3.在角色物体下方添加子物体CheckPoint并拖拽入角色的检测点位置</p>\n<p>4.修改参数就可以实现踩到平台时触发isOnGround，并且由fall动画转换到idle动画</p>\n<p>但是现在看不见检测范围，只能大致估计，怎么办呢？</p>\n<p>小技巧：添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private void OnDrawGizmosSelected()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Gizmos.color = Color.green;</span><br><span class=\"line\">    Gizmos.DrawWireSphere(groundCheck.transform.position, checkRadius);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上述代码是unity内置的方法，可以把检测范围可视化</p>\n<hr>\n<h3 id=\"五、切换死亡动画\"><a href=\"#五、切换死亡动画\" class=\"headerlink\" title=\"五、切换死亡动画\"></a>五、切换死亡动画</h3><p>1.修改尖刺的tag为新的Spike，状态机新建trigger型变量isDead，将Any State 连接到hit调整转换条件，这样就可以从任何状态转换到死亡状态</p>\n<p>2.添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private void OnTriggerEnter2D(Collider2D collision)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (collision.CompareTag(&quot;Spike&quot;))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        anim.SetTrigger(&quot;isDead&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样就实现了播放死亡动画，接下来再加一个表示角色死亡的标志</p>\n<p>3.添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public bool playerDead;</span><br><span class=\"line\"></span><br><span class=\"line\">public void PlayerDead()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    playerDead = true;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>4.找到玩家死亡的动画效果，在最后一帧添加函数<code>PlayerDead()</code></p>\n<hr>\n<h3 id=\"六、实现跳跃平台的跳跃效果\"><a href=\"#六、实现跳跃平台的跳跃效果\" class=\"headerlink\" title=\"六、实现跳跃平台的跳跃效果\"></a>六、实现跳跃平台的跳跃效果</h3><p>1.设置跳跃平台的tag为新的Fan</p>\n<p>2.添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public float bounceH;</span><br><span class=\"line\"></span><br><span class=\"line\">private void OnCollisionEnter2D(Collision2D collision)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (collision.gameObject.CompareTag(&quot;Fan&quot;))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        rb.velocity = new Vector2(rb.velocity.x, bounceH);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样以来，角色碰到跳跃平台时就会给rigidbody产生向上的大小为bounceH的力（就是被打飞了）</p>\n<p>发现之前说好的跳跃平台碰到角色会转起来现在好像没有转，原来是主角的tag没有设置成Player</p>\n<p>完美！</p>\n<hr>\n<h3 id=\"终、吐槽\"><a href=\"#终、吐槽\" class=\"headerlink\" title=\"终、吐槽\"></a>终、吐槽</h3><p>角色的各种动画转换也太复杂了！难道每次添加一个新的动作就要和所有的动作一起调整吗，天啊！有没有简单的方法啊，快浇浇我吧！</p>\n","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":"<h3 id=\"始、前言\"><a href=\"#始、前言\" class=\"headerlink\" title=\"始、前言\"></a>始、前言</h3><p>背景和障碍物都搭建完毕了，现在来制作我们操作的主角！（洗个衣服先…）</p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、添加动画及组件\"><a href=\"#一、添加动画及组件\" class=\"headerlink\" title=\"一、添加动画及组件\"></a>一、添加动画及组件</h3><p>1.先选中资源中喜欢的角色，修改所有精灵图的ppu为32</p>\n<p>2.制作动画，idle、run、jump、hit</p>\n<p>3.添加组件rigidbody 2d并且勾选constraints → freeze rotation → z 以此锁定z轴，防止碰撞时产生z轴翻转</p>\n<p>4.添加碰撞组件box collider 2d</p>\n<hr>\n<h3 id=\"二、脚本控制主角\"><a href=\"#二、脚本控制主角\" class=\"headerlink\" title=\"二、脚本控制主角\"></a>二、脚本控制主角</h3><p>添加脚本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class PlayerController : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Rigidbody2D rb;</span><br><span class=\"line\">    Animator anim;</span><br><span class=\"line\">    public float speed;</span><br><span class=\"line\">    float xVelocity;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class=\"line\">        anim = GetComponent&lt;Animator&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Movement();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Movement()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        xVelocity = Input.GetAxisRaw(&quot;Horizontal&quot;);</span><br><span class=\"line\">        rb.velocity = new Vector2(xVelocity * speed, rb.velocity.y);</span><br><span class=\"line\"></span><br><span class=\"line\">        if(xVelocity != 0)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            transform.localScale = new Vector3(xVelocity, 1, 1);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>挂载到角色上，就可以用方向键控制左右移动了（wsad也可以）</p>\n<p>并且<code>transform.localScale = new Vector3(xVelocity, 1, 1);</code>还实现了图案的左右翻转（之前我还傻傻地自己画各个方向的图）</p>\n<hr>\n<h3 id=\"三、切换跑步动画\"><a href=\"#三、切换跑步动画\" class=\"headerlink\" title=\"三、切换跑步动画\"></a>三、切换跑步动画</h3><p>1.打开player的Animator界面，相互连接idle和run，新建speed变量，设置idle转换为run的条件为speed大于0.1，run转换为idle的条件为speed小于0.1，同时记得调整转换时间和混合时间等设置（这里全部取消）</p>\n<p>2.在<code>void Movement()</code>中添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anim.SetFloat(&quot;speed&quot;, Mathf.Abs(rb.velocity.x));</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"四、切换下落动画\"><a href=\"#四、切换下落动画\" class=\"headerlink\" title=\"四、切换下落动画\"></a>四、切换下落动画</h3><p>1.动画all和idle相互连接，创建isOnGround变量来检测是否在平台上，把所有平台的Layer都改成新的Platform</p>\n<p>2.添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public bool isOnGround;</span><br><span class=\"line\">public float checkRadius;</span><br><span class=\"line\">public LayerMask layer;</span><br><span class=\"line\">public GameObject groundCheck;</span><br><span class=\"line\"></span><br><span class=\"line\">void Update()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Movement();</span><br><span class=\"line\">    isOnGround = Physics2D.OverlapCircle(groundCheck.transform.position, checkRadius, layer);</span><br><span class=\"line\">    anim.SetBool(&quot;isOnGround&quot;, isOnGround);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>3.在角色物体下方添加子物体CheckPoint并拖拽入角色的检测点位置</p>\n<p>4.修改参数就可以实现踩到平台时触发isOnGround，并且由fall动画转换到idle动画</p>\n<p>但是现在看不见检测范围，只能大致估计，怎么办呢？</p>\n<p>小技巧：添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private void OnDrawGizmosSelected()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Gizmos.color = Color.green;</span><br><span class=\"line\">    Gizmos.DrawWireSphere(groundCheck.transform.position, checkRadius);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上述代码是unity内置的方法，可以把检测范围可视化</p>\n<hr>\n<h3 id=\"五、切换死亡动画\"><a href=\"#五、切换死亡动画\" class=\"headerlink\" title=\"五、切换死亡动画\"></a>五、切换死亡动画</h3><p>1.修改尖刺的tag为新的Spike，状态机新建trigger型变量isDead，将Any State 连接到hit调整转换条件，这样就可以从任何状态转换到死亡状态</p>\n<p>2.添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private void OnTriggerEnter2D(Collider2D collision)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (collision.CompareTag(&quot;Spike&quot;))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        anim.SetTrigger(&quot;isDead&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样就实现了播放死亡动画，接下来再加一个表示角色死亡的标志</p>\n<p>3.添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public bool playerDead;</span><br><span class=\"line\"></span><br><span class=\"line\">public void PlayerDead()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    playerDead = true;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>4.找到玩家死亡的动画效果，在最后一帧添加函数<code>PlayerDead()</code></p>\n<hr>\n<h3 id=\"六、实现跳跃平台的跳跃效果\"><a href=\"#六、实现跳跃平台的跳跃效果\" class=\"headerlink\" title=\"六、实现跳跃平台的跳跃效果\"></a>六、实现跳跃平台的跳跃效果</h3><p>1.设置跳跃平台的tag为新的Fan</p>\n<p>2.添加代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public float bounceH;</span><br><span class=\"line\"></span><br><span class=\"line\">private void OnCollisionEnter2D(Collision2D collision)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (collision.gameObject.CompareTag(&quot;Fan&quot;))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        rb.velocity = new Vector2(rb.velocity.x, bounceH);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样以来，角色碰到跳跃平台时就会给rigidbody产生向上的大小为bounceH的力（就是被打飞了）</p>\n<p>发现之前说好的跳跃平台碰到角色会转起来现在好像没有转，原来是主角的tag没有设置成Player</p>\n<p>完美！</p>\n<hr>\n<h3 id=\"终、吐槽\"><a href=\"#终、吐槽\" class=\"headerlink\" title=\"终、吐槽\"></a>终、吐槽</h3><p>角色的各种动画转换也太复杂了！难道每次添加一个新的动作就要和所有的动作一起调整吗，天啊！有没有简单的方法啊，快浇浇我吧！</p>\n"},{"title":"C++STL","date":"2021-07-09T12:53:36.000Z","_content":"\n\n\n### \t始、STL初识\n\nSTL(standard template library)标准模板库\n\n广义上分为容器、算法、迭代器（容器和算法之间通过迭代器无缝连接）\n\n六大组件：容器、算法、迭代器、仿函数、适配器、空间配置器\n\n**主要学习以下四个：**\n\n​\t**容器**：vector、list、deque、set、map等\n\n​\t**算法(Algorithms)**：sort、find、copy、for_each等\n\n​\t**迭代器**：扮演容器与算法之间的胶合剂（每个容器都有自己专属的迭代器），迭代器可以理解成**指针**\n\n​\t**仿函数**：类似函数，可作为算法的某种策略\n\n\n\n<!---more--->\n\n---\n\n\n\n### \t\t一、vector容器\n\nvector容器可以理解成**数组**\n\n\n\n初始化：`vector<数据类型> 容器名 (容器大小)`\n\n容器输入：`容器名. push_back(数据)`，尾插法插入数据\n\n起始迭代器：`容器名. begin()`，指向第一个元素\n\n结束迭代器：`容器名. end()`，指向最后一个元素的下一个位置\n\n自定义专属迭代器：`vector<数据类型> : : iterator 迭代器名`\n\n\n\n### \t二、遍历算法：`for_each`\n\n```\nfor_each(InputIterator beg, InputIterator end, Function f) {\n  while(beg != end) \n    f(*beg++);\n}\n```\n\n\n\n\n\n---\n\n\n\n### \t\t三、map/multimap容器\n\nmap容器可以理解成**哈希表**\n\n\n\n**map中每个元素都是pair(对组元素)**\n\npair中第一个元素为key(键值)，第二个元素为value(实值)\n\n所有元素会根据键值自动排序\n\nmap不允许容器中有重复的key值\n\nmultimap允许容器中有重复的key值\n\n\n\n默认构造：`map<key类型, value类型> 容器名`\n\n拷贝构造：`map<key类型, value类型> 容器名 (拷贝容器名)`\n\n赋值：`容器名 = 目标容器名`\n\n插入数据：`容器名. insert(pair<key类型, value类型>(key, value))`\n\n\n\n","source":"_posts/更2021-07-09-C++STL.md","raw":"---\ntitle: C++STL\ndate: 2021-07-09 20:53:36\ncategories: c++\ntags:\n  - c++\n  - map\n  - vector\n---\n\n\n\n### \t始、STL初识\n\nSTL(standard template library)标准模板库\n\n广义上分为容器、算法、迭代器（容器和算法之间通过迭代器无缝连接）\n\n六大组件：容器、算法、迭代器、仿函数、适配器、空间配置器\n\n**主要学习以下四个：**\n\n​\t**容器**：vector、list、deque、set、map等\n\n​\t**算法(Algorithms)**：sort、find、copy、for_each等\n\n​\t**迭代器**：扮演容器与算法之间的胶合剂（每个容器都有自己专属的迭代器），迭代器可以理解成**指针**\n\n​\t**仿函数**：类似函数，可作为算法的某种策略\n\n\n\n<!---more--->\n\n---\n\n\n\n### \t\t一、vector容器\n\nvector容器可以理解成**数组**\n\n\n\n初始化：`vector<数据类型> 容器名 (容器大小)`\n\n容器输入：`容器名. push_back(数据)`，尾插法插入数据\n\n起始迭代器：`容器名. begin()`，指向第一个元素\n\n结束迭代器：`容器名. end()`，指向最后一个元素的下一个位置\n\n自定义专属迭代器：`vector<数据类型> : : iterator 迭代器名`\n\n\n\n### \t二、遍历算法：`for_each`\n\n```\nfor_each(InputIterator beg, InputIterator end, Function f) {\n  while(beg != end) \n    f(*beg++);\n}\n```\n\n\n\n\n\n---\n\n\n\n### \t\t三、map/multimap容器\n\nmap容器可以理解成**哈希表**\n\n\n\n**map中每个元素都是pair(对组元素)**\n\npair中第一个元素为key(键值)，第二个元素为value(实值)\n\n所有元素会根据键值自动排序\n\nmap不允许容器中有重复的key值\n\nmultimap允许容器中有重复的key值\n\n\n\n默认构造：`map<key类型, value类型> 容器名`\n\n拷贝构造：`map<key类型, value类型> 容器名 (拷贝容器名)`\n\n赋值：`容器名 = 目标容器名`\n\n插入数据：`容器名. insert(pair<key类型, value类型>(key, value))`\n\n\n\n","slug":"更2021-07-09-C++STL","published":1,"updated":"2021-07-14T12:53:37.873Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30xf000gi0u06ullh8v1","content":"<h3 id=\"始、STL初识\"><a href=\"#始、STL初识\" class=\"headerlink\" title=\"始、STL初识\"></a>始、STL初识</h3><p>STL(standard template library)标准模板库</p>\n<p>广义上分为容器、算法、迭代器（容器和算法之间通过迭代器无缝连接）</p>\n<p>六大组件：容器、算法、迭代器、仿函数、适配器、空间配置器</p>\n<p><strong>主要学习以下四个：</strong></p>\n<p>​    <strong>容器</strong>：vector、list、deque、set、map等</p>\n<p>​    **算法(Algorithms)**：sort、find、copy、for_each等</p>\n<p>​    <strong>迭代器</strong>：扮演容器与算法之间的胶合剂（每个容器都有自己专属的迭代器），迭代器可以理解成<strong>指针</strong></p>\n<p>​    <strong>仿函数</strong>：类似函数，可作为算法的某种策略</p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、vector容器\"><a href=\"#一、vector容器\" class=\"headerlink\" title=\"一、vector容器\"></a>一、vector容器</h3><p>vector容器可以理解成<strong>数组</strong></p>\n<p>初始化：<code>vector&lt;数据类型&gt; 容器名 (容器大小)</code></p>\n<p>容器输入：<code>容器名. push_back(数据)</code>，尾插法插入数据</p>\n<p>起始迭代器：<code>容器名. begin()</code>，指向第一个元素</p>\n<p>结束迭代器：<code>容器名. end()</code>，指向最后一个元素的下一个位置</p>\n<p>自定义专属迭代器：<code>vector&lt;数据类型&gt; : : iterator 迭代器名</code></p>\n<h3 id=\"二、遍历算法：for-each\"><a href=\"#二、遍历算法：for-each\" class=\"headerlink\" title=\"二、遍历算法：for_each\"></a>二、遍历算法：<code>for_each</code></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for_each(InputIterator beg, InputIterator end, Function f) &#123;</span><br><span class=\"line\">  while(beg != end) </span><br><span class=\"line\">    f(*beg++);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<hr>\n<h3 id=\"三、map-multimap容器\"><a href=\"#三、map-multimap容器\" class=\"headerlink\" title=\"三、map/multimap容器\"></a>三、map/multimap容器</h3><p>map容器可以理解成<strong>哈希表</strong></p>\n<p><strong>map中每个元素都是pair(对组元素)</strong></p>\n<p>pair中第一个元素为key(键值)，第二个元素为value(实值)</p>\n<p>所有元素会根据键值自动排序</p>\n<p>map不允许容器中有重复的key值</p>\n<p>multimap允许容器中有重复的key值</p>\n<p>默认构造：<code>map&lt;key类型, value类型&gt; 容器名</code></p>\n<p>拷贝构造：<code>map&lt;key类型, value类型&gt; 容器名 (拷贝容器名)</code></p>\n<p>赋值：<code>容器名 = 目标容器名</code></p>\n<p>插入数据：<code>容器名. insert(pair&lt;key类型, value类型&gt;(key, value))</code></p>\n","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":"<h3 id=\"始、STL初识\"><a href=\"#始、STL初识\" class=\"headerlink\" title=\"始、STL初识\"></a>始、STL初识</h3><p>STL(standard template library)标准模板库</p>\n<p>广义上分为容器、算法、迭代器（容器和算法之间通过迭代器无缝连接）</p>\n<p>六大组件：容器、算法、迭代器、仿函数、适配器、空间配置器</p>\n<p><strong>主要学习以下四个：</strong></p>\n<p>​    <strong>容器</strong>：vector、list、deque、set、map等</p>\n<p>​    **算法(Algorithms)**：sort、find、copy、for_each等</p>\n<p>​    <strong>迭代器</strong>：扮演容器与算法之间的胶合剂（每个容器都有自己专属的迭代器），迭代器可以理解成<strong>指针</strong></p>\n<p>​    <strong>仿函数</strong>：类似函数，可作为算法的某种策略</p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、vector容器\"><a href=\"#一、vector容器\" class=\"headerlink\" title=\"一、vector容器\"></a>一、vector容器</h3><p>vector容器可以理解成<strong>数组</strong></p>\n<p>初始化：<code>vector&lt;数据类型&gt; 容器名 (容器大小)</code></p>\n<p>容器输入：<code>容器名. push_back(数据)</code>，尾插法插入数据</p>\n<p>起始迭代器：<code>容器名. begin()</code>，指向第一个元素</p>\n<p>结束迭代器：<code>容器名. end()</code>，指向最后一个元素的下一个位置</p>\n<p>自定义专属迭代器：<code>vector&lt;数据类型&gt; : : iterator 迭代器名</code></p>\n<h3 id=\"二、遍历算法：for-each\"><a href=\"#二、遍历算法：for-each\" class=\"headerlink\" title=\"二、遍历算法：for_each\"></a>二、遍历算法：<code>for_each</code></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for_each(InputIterator beg, InputIterator end, Function f) &#123;</span><br><span class=\"line\">  while(beg != end) </span><br><span class=\"line\">    f(*beg++);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<hr>\n<h3 id=\"三、map-multimap容器\"><a href=\"#三、map-multimap容器\" class=\"headerlink\" title=\"三、map/multimap容器\"></a>三、map/multimap容器</h3><p>map容器可以理解成<strong>哈希表</strong></p>\n<p><strong>map中每个元素都是pair(对组元素)</strong></p>\n<p>pair中第一个元素为key(键值)，第二个元素为value(实值)</p>\n<p>所有元素会根据键值自动排序</p>\n<p>map不允许容器中有重复的key值</p>\n<p>multimap允许容器中有重复的key值</p>\n<p>默认构造：<code>map&lt;key类型, value类型&gt; 容器名</code></p>\n<p>拷贝构造：<code>map&lt;key类型, value类型&gt; 容器名 (拷贝容器名)</code></p>\n<p>赋值：<code>容器名 = 目标容器名</code></p>\n<p>插入数据：<code>容器名. insert(pair&lt;key类型, value类型&gt;(key, value))</code></p>\n"},{"title":"和相同的二元子数组","date":"2021-07-08T09:14:17.000Z","_content":"\n\n\n\n\n### \t题目：和相同的二元子数组（力扣）\n\n​\t给你一个二元数组 `nums` ，和一个整数 `goal` ，请你统计并返回有多少个和为 `goal` 的 **非空** 子数组。\n\n​\t**子数组** 是数组的一段连续部分。\n\n \n\n示例 1：\n\n```\n输入：nums = [1,0,1,0,1], goal = 2\n输出：4\n解释：\n有 4 个满足题目要求的子数组：[1,0,1]、[1,0,1,0]、[0,1,0,1]、[1,0,1]\n```\n\n<!---more--->\n\n示例 2：\n\n```\n输入：nums = [0,0,0,0,0], goal = 0\n输出：15\n```\n\n\n提示：\n\n- `1 <= nums.length <= 3 * 104`\n\n- `nums[i]` 不是 `0` 就是 `1`\n\n- `0 <= goal <= nums.length`\n\n  \n\n------\n\n\n\n### \t题解：\n\n```\nclass Solution {\npublic:\n    //滑动窗口法\n    //右指针逐渐向右，左一指针找到第一个符合的位置，左二指针找到最后一个符合的位置\n    int numSubarraysWithSum(vector<int>& nums, int goal) {\n        int left1 = 0, left2 = 0;\n        int n = nums.size();\n        int sum1 = 0, sum2 = 0;\n        int ret = 0;\n\n        for(int right = 0; right < n; right++){\n            sum2 += nums[right];\n            sum1 += nums[right];\n            while(left2 <= right && sum2 >= goal){\n                sum2 -= nums[left2];\n                left2++;\n            }\n\n            while(left1 < left2 && sum1 > goal){\n                sum1 -= nums[left1];\n                left1++;\n            }\n\n            ret += left2 - left1;\n        }\n\n        return ret;\n    }\n};\n```\n\n\n\n------\n\n\n\n### \t易错点：\n\n1.提示2`nums[i]` 不是 `0` 就是 `1`，所以不用判断相等的情况`if(sum == goal)`\n\n2.三个只指针对应的大小关系，其中`left1 <= left2 <= right <= nums.size()`\n\n","source":"_posts/2021-07-08-和相同的二元子数组.md","raw":"---\ntitle: 和相同的二元子数组\ndate: 2021-07-08 17:14:17\ncategories: 算法\ntags:\n  - c++\n  - 滑动窗口法\n---\n\n\n\n\n\n### \t题目：和相同的二元子数组（力扣）\n\n​\t给你一个二元数组 `nums` ，和一个整数 `goal` ，请你统计并返回有多少个和为 `goal` 的 **非空** 子数组。\n\n​\t**子数组** 是数组的一段连续部分。\n\n \n\n示例 1：\n\n```\n输入：nums = [1,0,1,0,1], goal = 2\n输出：4\n解释：\n有 4 个满足题目要求的子数组：[1,0,1]、[1,0,1,0]、[0,1,0,1]、[1,0,1]\n```\n\n<!---more--->\n\n示例 2：\n\n```\n输入：nums = [0,0,0,0,0], goal = 0\n输出：15\n```\n\n\n提示：\n\n- `1 <= nums.length <= 3 * 104`\n\n- `nums[i]` 不是 `0` 就是 `1`\n\n- `0 <= goal <= nums.length`\n\n  \n\n------\n\n\n\n### \t题解：\n\n```\nclass Solution {\npublic:\n    //滑动窗口法\n    //右指针逐渐向右，左一指针找到第一个符合的位置，左二指针找到最后一个符合的位置\n    int numSubarraysWithSum(vector<int>& nums, int goal) {\n        int left1 = 0, left2 = 0;\n        int n = nums.size();\n        int sum1 = 0, sum2 = 0;\n        int ret = 0;\n\n        for(int right = 0; right < n; right++){\n            sum2 += nums[right];\n            sum1 += nums[right];\n            while(left2 <= right && sum2 >= goal){\n                sum2 -= nums[left2];\n                left2++;\n            }\n\n            while(left1 < left2 && sum1 > goal){\n                sum1 -= nums[left1];\n                left1++;\n            }\n\n            ret += left2 - left1;\n        }\n\n        return ret;\n    }\n};\n```\n\n\n\n------\n\n\n\n### \t易错点：\n\n1.提示2`nums[i]` 不是 `0` 就是 `1`，所以不用判断相等的情况`if(sum == goal)`\n\n2.三个只指针对应的大小关系，其中`left1 <= left2 <= right <= nums.size()`\n\n","slug":"2021-07-08-和相同的二元子数组","published":1,"updated":"2021-07-08T09:36:50.742Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30xg000ii0u01br0ee0d","content":"<h3 id=\"题目：和相同的二元子数组（力扣）\"><a href=\"#题目：和相同的二元子数组（力扣）\" class=\"headerlink\" title=\"题目：和相同的二元子数组（力扣）\"></a>题目：和相同的二元子数组（力扣）</h3><p>​    给你一个二元数组 <code>nums</code> ，和一个整数 <code>goal</code> ，请你统计并返回有多少个和为 <code>goal</code> 的 <strong>非空</strong> 子数组。</p>\n<p>​    <strong>子数组</strong> 是数组的一段连续部分。</p>\n<p>示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,0,1,0,1], goal = 2</span><br><span class=\"line\">输出：4</span><br><span class=\"line\">解释：</span><br><span class=\"line\">有 4 个满足题目要求的子数组：[1,0,1]、[1,0,1,0]、[0,1,0,1]、[1,0,1]</span><br></pre></td></tr></table></figure>\n\n<!---more--->\n\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [0,0,0,0,0], goal = 0</span><br><span class=\"line\">输出：15</span><br></pre></td></tr></table></figure>\n\n\n<p>提示：</p>\n<ul>\n<li><p><code>1 &lt;= nums.length &lt;= 3 * 104</code></p>\n</li>\n<li><p><code>nums[i]</code> 不是 <code>0</code> 就是 <code>1</code></p>\n</li>\n<li><p><code>0 &lt;= goal &lt;= nums.length</code></p>\n</li>\n</ul>\n<hr>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    //滑动窗口法</span><br><span class=\"line\">    //右指针逐渐向右，左一指针找到第一个符合的位置，左二指针找到最后一个符合的位置</span><br><span class=\"line\">    int numSubarraysWithSum(vector&lt;int&gt;&amp; nums, int goal) &#123;</span><br><span class=\"line\">        int left1 = 0, left2 = 0;</span><br><span class=\"line\">        int n = nums.size();</span><br><span class=\"line\">        int sum1 = 0, sum2 = 0;</span><br><span class=\"line\">        int ret = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">        for(int right = 0; right &lt; n; right++)&#123;</span><br><span class=\"line\">            sum2 += nums[right];</span><br><span class=\"line\">            sum1 += nums[right];</span><br><span class=\"line\">            while(left2 &lt;= right &amp;&amp; sum2 &gt;= goal)&#123;</span><br><span class=\"line\">                sum2 -= nums[left2];</span><br><span class=\"line\">                left2++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            while(left1 &lt; left2 &amp;&amp; sum1 &gt; goal)&#123;</span><br><span class=\"line\">                sum1 -= nums[left1];</span><br><span class=\"line\">                left1++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            ret += left2 - left1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"易错点：\"><a href=\"#易错点：\" class=\"headerlink\" title=\"易错点：\"></a>易错点：</h3><p>1.提示2<code>nums[i]</code> 不是 <code>0</code> 就是 <code>1</code>，所以不用判断相等的情况<code>if(sum == goal)</code></p>\n<p>2.三个只指针对应的大小关系，其中<code>left1 &lt;= left2 &lt;= right &lt;= nums.size()</code></p>\n","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":"<h3 id=\"题目：和相同的二元子数组（力扣）\"><a href=\"#题目：和相同的二元子数组（力扣）\" class=\"headerlink\" title=\"题目：和相同的二元子数组（力扣）\"></a>题目：和相同的二元子数组（力扣）</h3><p>​    给你一个二元数组 <code>nums</code> ，和一个整数 <code>goal</code> ，请你统计并返回有多少个和为 <code>goal</code> 的 <strong>非空</strong> 子数组。</p>\n<p>​    <strong>子数组</strong> 是数组的一段连续部分。</p>\n<p>示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,0,1,0,1], goal = 2</span><br><span class=\"line\">输出：4</span><br><span class=\"line\">解释：</span><br><span class=\"line\">有 4 个满足题目要求的子数组：[1,0,1]、[1,0,1,0]、[0,1,0,1]、[1,0,1]</span><br></pre></td></tr></table></figure>\n\n<!---more--->\n\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [0,0,0,0,0], goal = 0</span><br><span class=\"line\">输出：15</span><br></pre></td></tr></table></figure>\n\n\n<p>提示：</p>\n<ul>\n<li><p><code>1 &lt;= nums.length &lt;= 3 * 104</code></p>\n</li>\n<li><p><code>nums[i]</code> 不是 <code>0</code> 就是 <code>1</code></p>\n</li>\n<li><p><code>0 &lt;= goal &lt;= nums.length</code></p>\n</li>\n</ul>\n<hr>\n<h3 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Solution &#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">    //滑动窗口法</span><br><span class=\"line\">    //右指针逐渐向右，左一指针找到第一个符合的位置，左二指针找到最后一个符合的位置</span><br><span class=\"line\">    int numSubarraysWithSum(vector&lt;int&gt;&amp; nums, int goal) &#123;</span><br><span class=\"line\">        int left1 = 0, left2 = 0;</span><br><span class=\"line\">        int n = nums.size();</span><br><span class=\"line\">        int sum1 = 0, sum2 = 0;</span><br><span class=\"line\">        int ret = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">        for(int right = 0; right &lt; n; right++)&#123;</span><br><span class=\"line\">            sum2 += nums[right];</span><br><span class=\"line\">            sum1 += nums[right];</span><br><span class=\"line\">            while(left2 &lt;= right &amp;&amp; sum2 &gt;= goal)&#123;</span><br><span class=\"line\">                sum2 -= nums[left2];</span><br><span class=\"line\">                left2++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            while(left1 &lt; left2 &amp;&amp; sum1 &gt; goal)&#123;</span><br><span class=\"line\">                sum1 -= nums[left1];</span><br><span class=\"line\">                left1++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            ret += left2 - left1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h3 id=\"易错点：\"><a href=\"#易错点：\" class=\"headerlink\" title=\"易错点：\"></a>易错点：</h3><p>1.提示2<code>nums[i]</code> 不是 <code>0</code> 就是 <code>1</code>，所以不用判断相等的情况<code>if(sum == goal)</code></p>\n<p>2.三个只指针对应的大小关系，其中<code>left1 &lt;= left2 &lt;= right &lt;= nums.size()</code></p>\n"},{"title":"《Speed Down》Unity2d游戏开发（四）","date":"2021-07-14T12:55:23.000Z","_content":"\n\n\n### \t始、阶段调整\n\n这次不做新功能，先停一停把之前的东西调整一下，细节~太细了~\n\n<!---more--->\n\n---\n\n\n\n### 一、图案模糊\n\n顶部尖刺看起来有些模糊\n\n1.找到尖刺的图案，将Advanced → Filter Mode 修改成Point\n\n检查所有的图案是否模糊，套用这个方法\n\n\n\n---\n\n\n\n### 二、修改背景颜色\n\n1.选择主相机，修改Camera → Background 到喜欢的颜色\n\n\n\n---\n\n\n\n### 三、给链锤添加链子？\n\n听起来有点奇怪，但是我的链锤现在确实是没有链子，看起来像是原力驱动\n\n1.给链锤整体添加组件Line Renderer，选择喜欢材质、颜色、粗细，并把Position → Size改成2\n\n2.添加脚本：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class SpikeBallLine : MonoBehaviour\n{\n\n    LineRenderer line;\n    public Transform begin;\n    public Transform end;\n\n    void Start()\n    {\n        line = GetComponent<LineRenderer>();\n\n    }\n\n    void Update()\n    {\n        line.SetPosition(0, begin.position);\n        line.SetPosition(1, end.position);\n    }\n}\n```\n\n挂载到链锤父物体上，注意脚本和线组件是同一级别的\n\n\n\n---\n\n\n\n### 四、保存预制体\n\n为了可以持续不断地随机生成平台，需要将平台保存为预制体\n\n1.创建prefabs文件夹，并把平台和人物添加到其中\n\n**Prefab是什么？**\n\n当制作好了游戏组件（场景中的任意一个gameobject）,我们希望将它制作成一个组件模版，用于批量的套用工作，例如说场景中本质上要重复使用的东西，比如：敌人、士兵、子弹或者一个砖块完全相同的墙体。这里说本质是因为默认生成的prefab其实和模版是一模一样的。就像是克隆体，但生成的位置、角度或者一些属性不同（这个就好像c++里边的类一样）；\n\n","source":"_posts/更2021-07-14-《Speed Down》Unity2d游戏开发（四）.md","raw":"---\ntitle: 《Speed Down》Unity2d游戏开发（四）\ndate: 2021-07-14 20:55:23\ncategories:\tunity\ntags:\n  - unity\n  - c#\n  - prefab\n---\n\n\n\n### \t始、阶段调整\n\n这次不做新功能，先停一停把之前的东西调整一下，细节~太细了~\n\n<!---more--->\n\n---\n\n\n\n### 一、图案模糊\n\n顶部尖刺看起来有些模糊\n\n1.找到尖刺的图案，将Advanced → Filter Mode 修改成Point\n\n检查所有的图案是否模糊，套用这个方法\n\n\n\n---\n\n\n\n### 二、修改背景颜色\n\n1.选择主相机，修改Camera → Background 到喜欢的颜色\n\n\n\n---\n\n\n\n### 三、给链锤添加链子？\n\n听起来有点奇怪，但是我的链锤现在确实是没有链子，看起来像是原力驱动\n\n1.给链锤整体添加组件Line Renderer，选择喜欢材质、颜色、粗细，并把Position → Size改成2\n\n2.添加脚本：\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class SpikeBallLine : MonoBehaviour\n{\n\n    LineRenderer line;\n    public Transform begin;\n    public Transform end;\n\n    void Start()\n    {\n        line = GetComponent<LineRenderer>();\n\n    }\n\n    void Update()\n    {\n        line.SetPosition(0, begin.position);\n        line.SetPosition(1, end.position);\n    }\n}\n```\n\n挂载到链锤父物体上，注意脚本和线组件是同一级别的\n\n\n\n---\n\n\n\n### 四、保存预制体\n\n为了可以持续不断地随机生成平台，需要将平台保存为预制体\n\n1.创建prefabs文件夹，并把平台和人物添加到其中\n\n**Prefab是什么？**\n\n当制作好了游戏组件（场景中的任意一个gameobject）,我们希望将它制作成一个组件模版，用于批量的套用工作，例如说场景中本质上要重复使用的东西，比如：敌人、士兵、子弹或者一个砖块完全相同的墙体。这里说本质是因为默认生成的prefab其实和模版是一模一样的。就像是克隆体，但生成的位置、角度或者一些属性不同（这个就好像c++里边的类一样）；\n\n","slug":"更2021-07-14-《Speed Down》Unity2d游戏开发（四）","published":1,"updated":"2021-07-14T13:37:01.303Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30xi000mi0u0e0ct4ska","content":"<h3 id=\"始、阶段调整\"><a href=\"#始、阶段调整\" class=\"headerlink\" title=\"始、阶段调整\"></a>始、阶段调整</h3><p>这次不做新功能，先停一停把之前的东西调整一下，细节<del>太细了</del></p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、图案模糊\"><a href=\"#一、图案模糊\" class=\"headerlink\" title=\"一、图案模糊\"></a>一、图案模糊</h3><p>顶部尖刺看起来有些模糊</p>\n<p>1.找到尖刺的图案，将Advanced → Filter Mode 修改成Point</p>\n<p>检查所有的图案是否模糊，套用这个方法</p>\n<hr>\n<h3 id=\"二、修改背景颜色\"><a href=\"#二、修改背景颜色\" class=\"headerlink\" title=\"二、修改背景颜色\"></a>二、修改背景颜色</h3><p>1.选择主相机，修改Camera → Background 到喜欢的颜色</p>\n<hr>\n<h3 id=\"三、给链锤添加链子？\"><a href=\"#三、给链锤添加链子？\" class=\"headerlink\" title=\"三、给链锤添加链子？\"></a>三、给链锤添加链子？</h3><p>听起来有点奇怪，但是我的链锤现在确实是没有链子，看起来像是原力驱动</p>\n<p>1.给链锤整体添加组件Line Renderer，选择喜欢材质、颜色、粗细，并把Position → Size改成2</p>\n<p>2.添加脚本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class SpikeBallLine : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    LineRenderer line;</span><br><span class=\"line\">    public Transform begin;</span><br><span class=\"line\">    public Transform end;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        line = GetComponent&lt;LineRenderer&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        line.SetPosition(0, begin.position);</span><br><span class=\"line\">        line.SetPosition(1, end.position);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>挂载到链锤父物体上，注意脚本和线组件是同一级别的</p>\n<hr>\n<h3 id=\"四、保存预制体\"><a href=\"#四、保存预制体\" class=\"headerlink\" title=\"四、保存预制体\"></a>四、保存预制体</h3><p>为了可以持续不断地随机生成平台，需要将平台保存为预制体</p>\n<p>1.创建prefabs文件夹，并把平台和人物添加到其中</p>\n<p><strong>Prefab是什么？</strong></p>\n<p>当制作好了游戏组件（场景中的任意一个gameobject）,我们希望将它制作成一个组件模版，用于批量的套用工作，例如说场景中本质上要重复使用的东西，比如：敌人、士兵、子弹或者一个砖块完全相同的墙体。这里说本质是因为默认生成的prefab其实和模版是一模一样的。就像是克隆体，但生成的位置、角度或者一些属性不同（这个就好像c++里边的类一样）；</p>\n","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":"<h3 id=\"始、阶段调整\"><a href=\"#始、阶段调整\" class=\"headerlink\" title=\"始、阶段调整\"></a>始、阶段调整</h3><p>这次不做新功能，先停一停把之前的东西调整一下，细节<del>太细了</del></p>\n<!---more--->\n\n<hr>\n<h3 id=\"一、图案模糊\"><a href=\"#一、图案模糊\" class=\"headerlink\" title=\"一、图案模糊\"></a>一、图案模糊</h3><p>顶部尖刺看起来有些模糊</p>\n<p>1.找到尖刺的图案，将Advanced → Filter Mode 修改成Point</p>\n<p>检查所有的图案是否模糊，套用这个方法</p>\n<hr>\n<h3 id=\"二、修改背景颜色\"><a href=\"#二、修改背景颜色\" class=\"headerlink\" title=\"二、修改背景颜色\"></a>二、修改背景颜色</h3><p>1.选择主相机，修改Camera → Background 到喜欢的颜色</p>\n<hr>\n<h3 id=\"三、给链锤添加链子？\"><a href=\"#三、给链锤添加链子？\" class=\"headerlink\" title=\"三、给链锤添加链子？\"></a>三、给链锤添加链子？</h3><p>听起来有点奇怪，但是我的链锤现在确实是没有链子，看起来像是原力驱动</p>\n<p>1.给链锤整体添加组件Line Renderer，选择喜欢材质、颜色、粗细，并把Position → Size改成2</p>\n<p>2.添加脚本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System.Collections;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">public class SpikeBallLine : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    LineRenderer line;</span><br><span class=\"line\">    public Transform begin;</span><br><span class=\"line\">    public Transform end;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        line = GetComponent&lt;LineRenderer&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void Update()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        line.SetPosition(0, begin.position);</span><br><span class=\"line\">        line.SetPosition(1, end.position);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>挂载到链锤父物体上，注意脚本和线组件是同一级别的</p>\n<hr>\n<h3 id=\"四、保存预制体\"><a href=\"#四、保存预制体\" class=\"headerlink\" title=\"四、保存预制体\"></a>四、保存预制体</h3><p>为了可以持续不断地随机生成平台，需要将平台保存为预制体</p>\n<p>1.创建prefabs文件夹，并把平台和人物添加到其中</p>\n<p><strong>Prefab是什么？</strong></p>\n<p>当制作好了游戏组件（场景中的任意一个gameobject）,我们希望将它制作成一个组件模版，用于批量的套用工作，例如说场景中本质上要重复使用的东西，比如：敌人、士兵、子弹或者一个砖块完全相同的墙体。这里说本质是因为默认生成的prefab其实和模版是一模一样的。就像是克隆体，但生成的位置、角度或者一些属性不同（这个就好像c++里边的类一样）；</p>\n"},{"top":true,"title":"Top","date":"2021-07-09T15:38:24.000Z","_content":"\n\n\n\n\n### 版本：\n\nhexo 5.4\n\nnext 7.8\n\n### \thexo + github 常用指令：\n\n新建文章：`hexo n 文章名`\n\n发布到本地：`hexo s`\n\n部署到github：`hexo clean` ， `hexo g -d`\n\n备份源文件到github：`git add .` ， `git commit -m 备注` ，  `git push origin hexo`\n\n","source":"_posts/更Top.md","raw":"---\ntop: true\ntitle: Top\ndate: 2021-07-09 23:38:24\ncategories: 琐碎\ntags:\n---\n\n\n\n\n\n### 版本：\n\nhexo 5.4\n\nnext 7.8\n\n### \thexo + github 常用指令：\n\n新建文章：`hexo n 文章名`\n\n发布到本地：`hexo s`\n\n部署到github：`hexo clean` ， `hexo g -d`\n\n备份源文件到github：`git add .` ， `git commit -m 备注` ，  `git push origin hexo`\n\n","slug":"更Top","published":1,"updated":"2021-07-10T08:20:44.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckr3j30xj000oi0u02b0ddjfr","content":"<h3 id=\"版本：\"><a href=\"#版本：\" class=\"headerlink\" title=\"版本：\"></a>版本：</h3><p>hexo 5.4</p>\n<p>next 7.8</p>\n<h3 id=\"hexo-github-常用指令：\"><a href=\"#hexo-github-常用指令：\" class=\"headerlink\" title=\"hexo + github 常用指令：\"></a>hexo + github 常用指令：</h3><p>新建文章：<code>hexo n 文章名</code></p>\n<p>发布到本地：<code>hexo s</code></p>\n<p>部署到github：<code>hexo clean</code> ， <code>hexo g -d</code></p>\n<p>备份源文件到github：<code>git add .</code> ， <code>git commit -m 备注</code> ，  <code>git push origin hexo</code></p>\n","site":{"data":{"styles":"body {\n  background: url(\"/assets/background.png\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: 50% 50%;\n  opacity: 0.95;\nmobile()\n}\n.post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n.site-meta {\n  background: $black;\n}\n.brand {\n  color: $white;\n}\n.site-subtitle {\n  color: $orange;\n}\n"}},"excerpt":"","more":"<h3 id=\"版本：\"><a href=\"#版本：\" class=\"headerlink\" title=\"版本：\"></a>版本：</h3><p>hexo 5.4</p>\n<p>next 7.8</p>\n<h3 id=\"hexo-github-常用指令：\"><a href=\"#hexo-github-常用指令：\" class=\"headerlink\" title=\"hexo + github 常用指令：\"></a>hexo + github 常用指令：</h3><p>新建文章：<code>hexo n 文章名</code></p>\n<p>发布到本地：<code>hexo s</code></p>\n<p>部署到github：<code>hexo clean</code> ， <code>hexo g -d</code></p>\n<p>备份源文件到github：<code>git add .</code> ， <code>git commit -m 备注</code> ，  <code>git push origin hexo</code></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckr3j30x10001i0u05h8vb9st","category_id":"ckr3j30x60004i0u09p0rca7w","_id":"ckr3j30xf000ei0u045ixf1lw"},{"post_id":"ckr3j30xa0008i0u0fp4r6t6z","category_id":"ckr3j30x60004i0u09p0rca7w","_id":"ckr3j30xg000hi0u063d72w9k"},{"post_id":"ckr3j30xd000bi0u04e0q3v3f","category_id":"ckr3j30x60004i0u09p0rca7w","_id":"ckr3j30xh000ji0u08s943kqy"},{"post_id":"ckr3j30x50003i0u09445dbhs","category_id":"ckr3j30x60004i0u09p0rca7w","_id":"ckr3j30xj000ni0u049iu0rsj"},{"post_id":"ckr3j30x80006i0u084zb0ltz","category_id":"ckr3j30xf000di0u00wjqb156","_id":"ckr3j30xk000qi0u0akot7o1o"},{"post_id":"ckr3j30xi000mi0u0e0ct4ska","category_id":"ckr3j30xf000di0u00wjqb156","_id":"ckr3j30xl000si0u0eutrhyux"},{"post_id":"ckr3j30x90007i0u0a63w0tk7","category_id":"ckr3j30xf000di0u00wjqb156","_id":"ckr3j30xm000ui0u0gxfvcbcq"},{"post_id":"ckr3j30xj000oi0u02b0ddjfr","category_id":"ckr3j30x60004i0u09p0rca7w","_id":"ckr3j30xm000xi0u0cv7415gn"},{"post_id":"ckr3j30xe000ci0u01lrthxii","category_id":"ckr3j30xf000di0u00wjqb156","_id":"ckr3j30xn0010i0u071lj3qqi"},{"post_id":"ckr3j30xf000gi0u06ullh8v1","category_id":"ckr3j30xl000ti0u0azelgzv0","_id":"ckr3j30xn0013i0u0cx4cgvqw"},{"post_id":"ckr3j30xg000ii0u01br0ee0d","category_id":"ckr3j30xm000yi0u07x5qeadu","_id":"ckr3j30xo0017i0u01wy043ck"}],"PostTag":[{"post_id":"ckr3j30x10001i0u05h8vb9st","tag_id":"ckr3j30x70005i0u0c7z2743m","_id":"ckr3j30xm000wi0u05s3n88wp"},{"post_id":"ckr3j30x10001i0u05h8vb9st","tag_id":"ckr3j30xb000ai0u0hzmgeh6e","_id":"ckr3j30xn000zi0u06k25h5hp"},{"post_id":"ckr3j30x10001i0u05h8vb9st","tag_id":"ckr3j30xf000fi0u041np01cj","_id":"ckr3j30xn0012i0u0by7ucpw3"},{"post_id":"ckr3j30x10001i0u05h8vb9st","tag_id":"ckr3j30xh000li0u04viuffn2","_id":"ckr3j30xn0014i0u00ezablh4"},{"post_id":"ckr3j30x10001i0u05h8vb9st","tag_id":"ckr3j30xl000ri0u0et75bi3z","_id":"ckr3j30xo0016i0u0ag9s0r86"},{"post_id":"ckr3j30x50003i0u09445dbhs","tag_id":"ckr3j30xf000fi0u041np01cj","_id":"ckr3j30xo0018i0u05x75doa0"},{"post_id":"ckr3j30x50003i0u09445dbhs","tag_id":"ckr3j30xn0011i0u0hjzc2mow","_id":"ckr3j30xo001ai0u0bqck8cjm"},{"post_id":"ckr3j30x80006i0u084zb0ltz","tag_id":"ckr3j30xn0015i0u02abyc82l","_id":"ckr3j30xp001ei0u01lbzc0xu"},{"post_id":"ckr3j30x80006i0u084zb0ltz","tag_id":"ckr3j30xo0019i0u03rv81onb","_id":"ckr3j30xp001fi0u0772t5aqy"},{"post_id":"ckr3j30x80006i0u084zb0ltz","tag_id":"ckr3j30xo001bi0u06v4i18jh","_id":"ckr3j30xp001hi0u09mz14ao7"},{"post_id":"ckr3j30x80006i0u084zb0ltz","tag_id":"ckr3j30xp001ci0u06mpi75em","_id":"ckr3j30xq001ii0u03xa2fvj6"},{"post_id":"ckr3j30x90007i0u0a63w0tk7","tag_id":"ckr3j30xn0015i0u02abyc82l","_id":"ckr3j30xq001mi0u04o1wbjoh"},{"post_id":"ckr3j30x90007i0u0a63w0tk7","tag_id":"ckr3j30xo0019i0u03rv81onb","_id":"ckr3j30xr001ni0u0bh8wcnry"},{"post_id":"ckr3j30x90007i0u0a63w0tk7","tag_id":"ckr3j30xq001ji0u077p0an18","_id":"ckr3j30xr001pi0u05vl7g3yh"},{"post_id":"ckr3j30x90007i0u0a63w0tk7","tag_id":"ckr3j30xq001ki0u0cpp9bgwz","_id":"ckr3j30xr001qi0u07r9aca1l"},{"post_id":"ckr3j30xa0008i0u0fp4r6t6z","tag_id":"ckr3j30xn0015i0u02abyc82l","_id":"ckr3j30xs001ui0u0bzy94szv"},{"post_id":"ckr3j30xa0008i0u0fp4r6t6z","tag_id":"ckr3j30xo0019i0u03rv81onb","_id":"ckr3j30xs001vi0u098f05k69"},{"post_id":"ckr3j30xa0008i0u0fp4r6t6z","tag_id":"ckr3j30xr001ri0u06b327e4l","_id":"ckr3j30xs001xi0u0c8ky2mof"},{"post_id":"ckr3j30xa0008i0u0fp4r6t6z","tag_id":"ckr3j30xr001si0u0frs9cjmb","_id":"ckr3j30xs001yi0u0f604ezph"},{"post_id":"ckr3j30xd000bi0u04e0q3v3f","tag_id":"ckr3j30xr001ti0u03o43bxlq","_id":"ckr3j30xs0020i0u0dixc4z8d"},{"post_id":"ckr3j30xe000ci0u01lrthxii","tag_id":"ckr3j30xn0015i0u02abyc82l","_id":"ckr3j30xu0025i0u0fb5hgebs"},{"post_id":"ckr3j30xe000ci0u01lrthxii","tag_id":"ckr3j30xo0019i0u03rv81onb","_id":"ckr3j30xu0026i0u055dk5ohu"},{"post_id":"ckr3j30xe000ci0u01lrthxii","tag_id":"ckr3j30xt0021i0u00usfcjjn","_id":"ckr3j30xu0028i0u017q5g6en"},{"post_id":"ckr3j30xe000ci0u01lrthxii","tag_id":"ckr3j30xt0022i0u0cr9hh1f6","_id":"ckr3j30xu0029i0u07uhr9sci"},{"post_id":"ckr3j30xe000ci0u01lrthxii","tag_id":"ckr3j30xq001ki0u0cpp9bgwz","_id":"ckr3j30xu002bi0u03od7hs9w"},{"post_id":"ckr3j30xf000gi0u06ullh8v1","tag_id":"ckr3j30xt0024i0u01jgz4792","_id":"ckr3j30xv002di0u0fs0laqkr"},{"post_id":"ckr3j30xf000gi0u06ullh8v1","tag_id":"ckr3j30xu0027i0u0fw198mj4","_id":"ckr3j30xv002ei0u0haje5kn6"},{"post_id":"ckr3j30xf000gi0u06ullh8v1","tag_id":"ckr3j30xu002ai0u0b86themd","_id":"ckr3j30xv002gi0u0cmm49c9h"},{"post_id":"ckr3j30xg000ii0u01br0ee0d","tag_id":"ckr3j30xt0024i0u01jgz4792","_id":"ckr3j30xv002ii0u0efuo7kpl"},{"post_id":"ckr3j30xg000ii0u01br0ee0d","tag_id":"ckr3j30xv002fi0u0a48k5svj","_id":"ckr3j30xv002ji0u08m7r3zl7"},{"post_id":"ckr3j30xi000mi0u0e0ct4ska","tag_id":"ckr3j30xn0015i0u02abyc82l","_id":"ckr3j30xy002mi0u0gc5u306h"},{"post_id":"ckr3j30xi000mi0u0e0ct4ska","tag_id":"ckr3j30xo0019i0u03rv81onb","_id":"ckr3j30xy002ni0u0cvex7itk"},{"post_id":"ckr3j30xi000mi0u0e0ct4ska","tag_id":"ckr3j30xw002li0u0chpg7epj","_id":"ckr3j30xy002oi0u00ki4dwov"}],"Tag":[{"name":"hexo","_id":"ckr3j30x70005i0u0c7z2743m"},{"name":"git","_id":"ckr3j30xb000ai0u0hzmgeh6e"},{"name":"github","_id":"ckr3j30xf000fi0u041np01cj"},{"name":"typora","_id":"ckr3j30xh000li0u04viuffn2"},{"name":"next","_id":"ckr3j30xl000ri0u0et75bi3z"},{"name":"windows","_id":"ckr3j30xn0011i0u0hjzc2mow"},{"name":"unity","_id":"ckr3j30xn0015i0u02abyc82l"},{"name":"c#","_id":"ckr3j30xo0019i0u03rv81onb"},{"name":"unityhub","_id":"ckr3j30xo001bi0u06v4i18jh"},{"name":"2d","_id":"ckr3j30xp001ci0u06mpi75em"},{"name":"joint","_id":"ckr3j30xq001ji0u077p0an18"},{"name":"collider","_id":"ckr3j30xq001ki0u0cpp9bgwz"},{"name":"ps","_id":"ckr3j30xr001ri0u06b327e4l"},{"name":"像素","_id":"ckr3j30xr001si0u0frs9cjmb"},{"name":"pr","_id":"ckr3j30xr001ti0u03o43bxlq"},{"name":"animator","_id":"ckr3j30xt0021i0u00usfcjjn"},{"name":"trigger","_id":"ckr3j30xt0022i0u0cr9hh1f6"},{"name":"c++","_id":"ckr3j30xt0024i0u01jgz4792"},{"name":"map","_id":"ckr3j30xu0027i0u0fw198mj4"},{"name":"vector","_id":"ckr3j30xu002ai0u0b86themd"},{"name":"滑动窗口法","_id":"ckr3j30xv002fi0u0a48k5svj"},{"name":"prefab","_id":"ckr3j30xw002li0u0chpg7epj"}]}}